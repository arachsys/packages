while getopts :ds: OPTION; do
  case $OPTION in
    d)
      DEBUG=1
      ;;
    s)
      if [[ -d $OPTARG ]]; then
        SRC=$OPTARG
      else
        die "Prepared source tree $OPTARG not found"
      fi
      ;;
  esac
done
shift $(($OPTIND - 1))

if [[ -z ${1##*/} ]]; then
  die "$(< $LIBRARY/help)"
fi

PKG=$(locate "$PKGDIR" "$1")
mkdir -p "$CACHEDIR" "$IMGDIR"

ROOT=$(mktemp -d "$IMGDIR/${1##*/}.XXXXXX")
if [[ -n $DEBUG ]]; then
  trap 'echo "Build root left in $ROOT" >&2' EXIT
else
  trap 'rm -f -r --one-file-system "$ROOT"' EXIT
fi

mkdir -m 0755 -p "$ROOT"/{bin,dev,etc,lib,proc,run,sys,var}
mkdir -m 0755 -p "$ROOT"/{dst,pkg,src,var/cache}
mkdir -m 1777 -p "$ROOT"/{run/shm,var/tmp}
ln -s var/tmp "$ROOT/tmp"

cp -L -R /etc/{protocols,resolv.conf,services,ssl} "$ROOT/etc/"
cp "$LIBRARY/skel/passwd" "$LIBRARY/skel/group" "$ROOT/etc/"

for IMG in "$PKGDIR"/base/*; do
  if [[ -d "$IMGDIR/${IMG##*/}" ]]; then
    cp -a -l -T "$IMGDIR/${IMG##*/}" "$ROOT"
  else
    die "Base image ${IMG##*/} not found in $IMGDIR"
  fi
done

mapfile -t REQUIRED \
  < <(encapsulate "$ROOT" pkg helper requirements "${PKG##*/}" "${@:2}")
for IMG in "${REQUIRED[@]}"; do
  if [[ -n ${IMG%%+(/)} ]] && [[ -d "$IMGDIR/$IMG" ]]; then
    cp -a -l -T "$IMGDIR/$IMG" "$ROOT"
  else
    die "Required image $IMG not found in $IMGDIR"
  fi
done

encapsulate "$ROOT" pkg helper build "${PKG##*/}" "${@:2}"

if [[ -n $DEBUG ]]; then
  echo "Debug mode: not installing or replacing images"
else
  for IMG in "$ROOT"/dst/img/*; do
    if [[ -d "$IMGDIR/${IMG##*/}" ]]; then
      echo "Replacing existing image in $IMGDIR/${IMG##*/}"
      rm -f -r "$IMGDIR/${IMG##*/}"
      mv "$IMG" "$IMGDIR/${IMG##*/}"
    else
      echo "Installing new image in $IMGDIR/${IMG##*/}"
      mv "$IMG" "$IMGDIR/${IMG##*/}"
    fi
  done
fi
