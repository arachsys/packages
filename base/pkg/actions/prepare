if [[ $# -lt 1 ]]; then
  die "$(< $LIBRARY/help)"
elif [[ $2 != ?(-) ]] && [[ -e "$2" ]]; then
  die "Cannot unpack sources: $2 already exists"
fi

PKG=$(locate "$PKGDIR" "$1")
mkdir -p "$CACHEDIR" "$IMGDIR"

ROOT=$(mktemp -d "$IMGDIR/${1##*/}.XXXXXX")
trap 'rm -f -r --one-file-system "$ROOT"' EXIT

mkdir -m 0755 -p "$ROOT"/{bin,dev,etc,lib,proc,run,sys,var}
mkdir -m 0755 -p "$ROOT"/{pkg,src,var/cache}
mkdir -m 1777 -p "$ROOT"/{run/shm,var/tmp}
ln -s var/tmp "$ROOT/tmp"

cp -L -R /etc/{protocols,resolv.conf,services,ssl} "$ROOT/etc/"
cp "$LIBRARY/skel/passwd" "$LIBRARY/skel/group" "$ROOT/etc/"

for IMG in "$PKGDIR"/base/*; do
  if [[ -d "$IMGDIR/${IMG##*/}" ]]; then
    cp -a -l -T "$IMGDIR/${IMG##*/}" "$ROOT"
  else
    die "Base image ${IMG##*/} not found in $IMGDIR"
  fi
done

mapfile -t REQUIRED \
  < <(encapsulate "$ROOT" pkg helper requirements "${PKG##*/}" "${@:3}")
for IMG in "${REQUIRED[@]}"; do
  if [[ -n ${IMG%%+(/)} ]] && [[ -d "$IMGDIR/$IMG" ]]; then
    cp -a -l -T "$IMGDIR/$IMG" "$ROOT"
  else
    die "Required image $IMG not found in $IMGDIR"
  fi
done

encapsulate "$ROOT" pkg helper prepare "${PKG##*/}" "${@:3}"

if [[ $2 != ?(-) ]]; then
  mv "$ROOT/src" "$2"
fi
