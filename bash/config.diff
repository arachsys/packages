diff --git a/doc/bash.1 b/doc/bash.1
index 55c5622..1bc0c9f 100644
--- a/doc/bash.1
+++ b/doc/bash.1
@@ -188,6 +188,8 @@ Display a usage message on standard output and exit successfully.
 Execute commands from
 .I file
 instead of the standard personal initialization file
+.I ~/.config/bash/bashrc
+or
 .I ~/.bashrc
 if the shell is interactive (see
 .SM
@@ -219,6 +221,8 @@ below).
 .TP
 .B \-\-norc
 Do not read and execute the personal initialization file
+.I ~/.config/bash/bashrc
+or
 .I ~/.bashrc
 if the shell is interactive.
 This option is on by default if the shell is invoked as
@@ -318,9 +322,10 @@ is invoked as an interactive login shell, or as a non-interactive shell
 with the \fB\-\-login\fP option, it first reads and
 executes commands from the file \fI/etc/profile\fP, if that
 file exists.
-After reading that file, it looks for \fI~/.bash_profile\fP,
-\fI~/.bash_login\fP, and \fI~/.profile\fP, in that order, and reads
-and executes commands from the first one that exists and is readable.
+After reading that file, it looks for \fI~/.config/bash/profile\fP,
+\fI~/.bash_profile\fP, \fI~/.bash_login\fP, and \fI~/.profile\fP, in that
+order, and reads and executes commands from the first one that exists and
+is readable.
 The
 .B \-\-noprofile
 option may be used when the shell is started to inhibit this behavior.
@@ -333,8 +338,9 @@ exists.
 .PP
 When an interactive shell that is not a login shell is started,
 .B bash
-reads and executes commands from \fI~/.bashrc\fP, if that file exists.
-This may be inhibited by using the
+looks for \fI~/.config/bash/bashrc\fP, and \fI~/.bashrc\fP, in that
+order, and reads and executes commands from the first one that exists and
+is readable.  This may be inhibited by using the
 .B \-\-norc
 option.
 The \fB\-\-rcfile\fP \fIfile\fP option will force
@@ -426,8 +432,9 @@ or the secure shell daemon \fIsshd\fP.
 If
 .B bash
 determines it is being run non-interactively in this fashion,
-it reads and executes commands from \fI~/.bashrc\fP,
-if that file exists and is readable.
+it reads and executes commands from the first one of
+\fI~/.config/bash/bashrc\fP and \fI~/.bashrc\fP
+which exists and is readable.
 It will not do this if invoked as \fBsh\fP.
 The
 .B \-\-norc
@@ -2284,7 +2291,7 @@ not tested, and are added to the history regardless of the value of
 The name of the file in which command history is saved (see
 .SM
 .B HISTORY
-below).  The default value is \fI~/.bash_history\fP.  If unset, the
+below).  The default value is unset.  If unset, the
 command history is not saved when a shell exits.
 .TP
 .B HISTFILESIZE
diff --git a/shell.c b/shell.c
index ee9d445..2019193 100644
--- a/shell.c
+++ b/shell.c
@@ -194,7 +194,7 @@ int have_devfd = 0;
 #endif
 
 /* The name of the .(shell)rc file. */
-static char *bashrc_file = DEFAULT_BASHRC;
+static char *bashrc_file;
 
 /* Non-zero means to act more like the Bourne shell on startup. */
 static int act_like_sh;
@@ -1120,6 +1120,41 @@ execute_env_file (env_file)
     }
 }
 
+/* Execute /etc/profile and one of the personal login shell
+   initialization files. */
+static void
+execute_profile ()
+{
+  maybe_execute_file (SYS_PROFILE, 1);
+
+  if (!act_like_sh)
+    {
+      if (maybe_execute_file ("~/.config/bash/profile", 1) ||
+          maybe_execute_file ("~/.bash_profile", 1) ||
+          maybe_execute_file ("~/.bash_login", 1))
+	return;
+    }
+
+  maybe_execute_file ("~/.profile", 1);
+}
+
+static void
+execute_bashrc ()
+{
+#ifdef SYS_BASHRC
+#  if defined (__OPENNT)
+  maybe_execute_file (_prefixInstallPath(SYS_BASHRC, NULL, 0), 1);
+#  else
+  maybe_execute_file (SYS_BASHRC, 1);
+#  endif
+#endif
+
+  if (bashrc_file)
+    maybe_execute_file (bashrc_file, 1);
+  else if (maybe_execute_file ("~/.config/bash/bashrc", 1) == 0)
+    maybe_execute_file (DEFAULT_BASHRC, 1);
+}
+
 static void
 run_startup_files ()
 {
@@ -1148,17 +1183,10 @@ run_startup_files ()
 #else
       if (isnetconn (fileno (stdin) && shell_level < 2)
 #endif
-	{
-#ifdef SYS_BASHRC
-#  if defined (__OPENNT)
-	  maybe_execute_file (_prefixInstallPath(SYS_BASHRC, NULL, 0), 1);
-#  else
-	  maybe_execute_file (SYS_BASHRC, 1);
-#  endif
-#endif
-	  maybe_execute_file (bashrc_file, 1);
-	  return;
-	}
+       {
+         execute_bashrc ();
+         return;
+       }
     }
 
 #if defined (JOB_CONTROL)
@@ -1181,18 +1209,8 @@ run_startup_files ()
       /* We don't execute .bashrc for login shells. */
       no_rc++;
 
-      /* Execute /etc/profile and one of the personal login shell
-	 initialization files. */
       if (no_profile == 0)
-	{
-	  maybe_execute_file (SYS_PROFILE, 1);
-
-	  if (act_like_sh)	/* sh */
-	    maybe_execute_file ("~/.profile", 1);
-	  else if ((maybe_execute_file ("~/.bash_profile", 1) == 0) &&
-		   (maybe_execute_file ("~/.bash_login", 1) == 0))	/* bash */
-	    maybe_execute_file ("~/.profile", 1);
-	}
+	execute_profile ();
 
       sourced_login = 1;
     }
@@ -1217,32 +1235,13 @@ run_startup_files ()
 	  /* We don't execute .bashrc for login shells. */
 	  no_rc++;
 
-	  /* Execute /etc/profile and one of the personal login shell
-	     initialization files. */
 	  if (no_profile == 0)
-	    {
-	      maybe_execute_file (SYS_PROFILE, 1);
-
-	      if (act_like_sh)	/* sh */
-		maybe_execute_file ("~/.profile", 1);
-	      else if ((maybe_execute_file ("~/.bash_profile", 1) == 0) &&
-		       (maybe_execute_file ("~/.bash_login", 1) == 0))	/* bash */
-		maybe_execute_file ("~/.profile", 1);
-	    }
+	    execute_profile ();
 	}
 
       /* bash */
       if (act_like_sh == 0 && no_rc == 0)
-	{
-#ifdef SYS_BASHRC
-#  if defined (__OPENNT)
-	  maybe_execute_file (_prefixInstallPath(SYS_BASHRC, NULL, 0), 1);
-#  else
-	  maybe_execute_file (SYS_BASHRC, 1);
-#  endif
-#endif
-	  maybe_execute_file (bashrc_file, 1);
-	}
+        execute_bashrc ();
       /* sh */
       else if (act_like_sh && privileged_mode == 0 && sourced_env++ == 0)
 	execute_env_file (get_string_value ("ENV"));
@@ -2040,7 +2039,7 @@ shell_reinitialize ()
 
   /* Ensure that the default startup file is used.  (Except that we don't
      execute this file for reinitialized shells). */
-  bashrc_file = DEFAULT_BASHRC;
+  bashrc_file = NULL;
 
   /* Delete all variables and functions.  They will be reinitialized when
      the environment is parsed. */
diff --git a/variables.c b/variables.c
index 1a0c2c4..02aa38a 100644
--- a/variables.c
+++ b/variables.c
@@ -648,7 +648,7 @@ initialize_shell_variables (env, privmode)
   if (temp_var && imported_p (temp_var))
     sv_strict_posix (temp_var->name);
 
-#if defined (HISTORY)
+#if 0
   /* Set history variables to defaults, and then do whatever we would
      do if the variable had just been set.  Do this only in the case
      that we are remembering commands on the history list. */
@@ -659,7 +659,7 @@ initialize_shell_variables (env, privmode)
       set_if_not ("HISTFILE", name);
       free (name);
     }
-#endif /* HISTORY */
+#endif
 
   /* Seed the random number generators. */
   seedrand ();
