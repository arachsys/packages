diff --git a/builtins/exit.def b/builtins/exit.def
index 9c85bc5..78b1af7 100644
--- a/builtins/exit.def
+++ b/builtins/exit.def
@@ -161,7 +161,8 @@ bash_logout ()
   /* Run our `~/.bash_logout' file if it exists, and this is a login shell. */
   if (login_shell && sourced_logout++ == 0 && subshell_environment == 0)
     {
-      maybe_execute_file ("~/.bash_logout", 1);
+      if (!maybe_execute_file ("~/.config/bash/logout", 1))
+         maybe_execute_file ("~/.bash_logout", 1);
 #ifdef SYS_BASH_LOGOUT
       maybe_execute_file (SYS_BASH_LOGOUT, 1);
 #endif
diff --git a/shell.c b/shell.c
index ebd8965..5daad36 100644
--- a/shell.c
+++ b/shell.c
@@ -194,7 +194,7 @@ int have_devfd = 0;
 #endif
 
 /* The name of the .(shell)rc file. */
-static char *bashrc_file = DEFAULT_BASHRC;
+static char *bashrc_file;
 
 /* Non-zero means to act more like the Bourne shell on startup. */
 static int act_like_sh;
@@ -1120,6 +1120,42 @@ execute_env_file (env_file)
     }
 }
 
+/* Execute /etc/profile and one of the personal login shell
+   initialization files. */
+static void
+execute_profile ()
+{
+  maybe_execute_file (SYS_PROFILE, 1);
+
+  if (!act_like_sh)
+    {
+      if (maybe_execute_file ("~/.config/bash/profile", 1) ||
+          maybe_execute_file ("~/.config/bash/login", 1) ||
+          maybe_execute_file ("~/.bash_profile", 1) ||
+          maybe_execute_file ("~/.bash_login", 1))
+	return;
+    }
+  if (!maybe_execute_file ("~/.config/bash/profile", 1))
+     maybe_execute_file ("~/.profile", 1);
+}
+
+static void
+execute_bashrc ()
+{
+#ifdef SYS_BASHRC
+#  if defined (__OPENNT)
+  maybe_execute_file (_prefixInstallPath(SYS_BASHRC, NULL, 0), 1);
+#  else
+  maybe_execute_file (SYS_BASHRC, 1);
+#  endif
+#endif
+
+  if (bashrc_file)
+    maybe_execute_file (bashrc_file, 1);
+  else if (!maybe_execute_file ("~/.config/bash/bashrc", 1))
+    maybe_execute_file ("~/.bashrc", 1);
+}
+
 static void
 run_startup_files ()
 {
@@ -1148,17 +1184,10 @@ run_startup_files ()
 #else
       if (isnetconn (fileno (stdin) && shell_level < 2)
 #endif
-	{
-#ifdef SYS_BASHRC
-#  if defined (__OPENNT)
-	  maybe_execute_file (_prefixInstallPath(SYS_BASHRC, NULL, 0), 1);
-#  else
-	  maybe_execute_file (SYS_BASHRC, 1);
-#  endif
-#endif
-	  maybe_execute_file (bashrc_file, 1);
-	  return;
-	}
+       {
+         execute_bashrc ();
+         return;
+       }
     }
 
 #if defined (JOB_CONTROL)
@@ -1181,18 +1210,8 @@ run_startup_files ()
       /* We don't execute .bashrc for login shells. */
       no_rc++;
 
-      /* Execute /etc/profile and one of the personal login shell
-	 initialization files. */
       if (no_profile == 0)
-	{
-	  maybe_execute_file (SYS_PROFILE, 1);
-
-	  if (act_like_sh)	/* sh */
-	    maybe_execute_file ("~/.profile", 1);
-	  else if ((maybe_execute_file ("~/.bash_profile", 1) == 0) &&
-		   (maybe_execute_file ("~/.bash_login", 1) == 0))	/* bash */
-	    maybe_execute_file ("~/.profile", 1);
-	}
+	execute_profile ();
 
       sourced_login = 1;
     }
@@ -1217,32 +1236,13 @@ run_startup_files ()
 	  /* We don't execute .bashrc for login shells. */
 	  no_rc++;
 
-	  /* Execute /etc/profile and one of the personal login shell
-	     initialization files. */
 	  if (no_profile == 0)
-	    {
-	      maybe_execute_file (SYS_PROFILE, 1);
-
-	      if (act_like_sh)	/* sh */
-		maybe_execute_file ("~/.profile", 1);
-	      else if ((maybe_execute_file ("~/.bash_profile", 1) == 0) &&
-		       (maybe_execute_file ("~/.bash_login", 1) == 0))	/* bash */
-		maybe_execute_file ("~/.profile", 1);
-	    }
+	    execute_profile ();
 	}
 
       /* bash */
       if (act_like_sh == 0 && no_rc == 0)
-	{
-#ifdef SYS_BASHRC
-#  if defined (__OPENNT)
-	  maybe_execute_file (_prefixInstallPath(SYS_BASHRC, NULL, 0), 1);
-#  else
-	  maybe_execute_file (SYS_BASHRC, 1);
-#  endif
-#endif
-	  maybe_execute_file (bashrc_file, 1);
-	}
+        execute_bashrc ();
       /* sh */
       else if (act_like_sh && privileged_mode == 0 && sourced_env++ == 0)
 	execute_env_file (get_string_value ("ENV"));
@@ -2040,7 +2040,7 @@ shell_reinitialize ()
 
   /* Ensure that the default startup file is used.  (Except that we don't
      execute this file for reinitialized shells). */
-  bashrc_file = DEFAULT_BASHRC;
+  bashrc_file = NULL;
 
   /* Delete all variables and functions.  They will be reinitialized when
      the environment is parsed. */
diff --git a/variables.c b/variables.c
index 1a0c2c4..02aa38a 100644
--- a/variables.c
+++ b/variables.c
@@ -648,7 +648,7 @@ initialize_shell_variables (env, privmode)
   if (temp_var && imported_p (temp_var))
     sv_strict_posix (temp_var->name);
 
-#if defined (HISTORY)
+#if 0
   /* Set history variables to defaults, and then do whatever we would
      do if the variable had just been set.  Do this only in the case
      that we are remembering commands on the history list. */
@@ -659,7 +659,7 @@ initialize_shell_variables (env, privmode)
       set_if_not ("HISTFILE", name);
       free (name);
     }
-#endif /* HISTORY */
+#endif
 
   /* Seed the random number generators. */
   seedrand ();
