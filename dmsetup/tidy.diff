diff --git a/libdm/dm-tools/dmfilemapd.c b/libdm/dm-tools/dmfilemapd.c
index 6ee67321..77bb1924 100644
--- a/libdm/dm-tools/dmfilemapd.c
+++ b/libdm/dm-tools/dmfilemapd.c
@@ -260,7 +260,7 @@ static int _parse_args(int argc, char **argv, struct filemap_monitor *fm)
 
 	if (argc < 5) {
 		_early_log("Wrong number of arguments.");
-		_early_log("usage: %s", _usage);
+		_early_log("Usage: %s", _usage);
 		return 0;
 	}
 
diff --git a/libdm/dm-tools/dmsetup.c b/libdm/dm-tools/dmsetup.c
index cbb27c6e..ab5f1021 100644
--- a/libdm/dm-tools/dmsetup.c
+++ b/libdm/dm-tools/dmsetup.c
@@ -131,7 +131,7 @@ typedef enum {
 #define DMLOSETUP_CMD_NAME "dmlosetup"
 #define DMSTATS_CMD_NAME "dmstats"
 #define DMSETUP_STATS_CMD_NAME "dmsetup stats"
-#define DEVMAP_NAME_CMD_NAME "devmap_name"
+#define DEVMAP_NAME_CMD_NAME "dmname"
 
 static const struct {
 	cmd_name_t command;
@@ -6294,12 +6294,14 @@ static const struct command _dmsetup_commands[] = {
 	{"wait", "<device> [<event_nr>] [--noflush]", 0, 2, 0, 0, _wait},
 	{"mknodes", "[<device>...]", 0, -1, 1, 0, _mknodes},
 	{"mangle", "[<device>...]", 0, -1, 1, 0, _mangle},
+#ifdef UDEV_SYNC_SUPPORT
 	{"udevcreatecookie", "", 0, 0, 0, 0, _udevcreatecookie},
 	{"udevreleasecookie", "[<cookie>]", 0, 1, 0, 0, _udevreleasecookie},
 	{"udevflags", "<cookie>", 1, 1, 0, 0, _udevflags},
 	{"udevcomplete", "<cookie>", 1, 1, 0, 0, _udevcomplete},
 	{"udevcomplete_all", "[<age_in_minutes>]", 0, 1, 0, 0, _udevcomplete_all},
 	{"udevcookies", "", 0, 0, 0, 0, _udevcookies},
+#endif
 	{"target-version", "[<target>...]", 1, -1, 1, 0, _target_version},
 	{"targets", "", 0, 0, 0, 0, _targets},
 	{"version", "", 0, 0, 0, 0, _version},
@@ -6320,8 +6322,7 @@ static void _stats_usage(FILE *out)
 {
 	unsigned i;
 
-	fprintf(out, "Usage:\n\n"
-		"%s\n\t"
+	fprintf(out, "Usage: %s\n\t"
 		"[-h|--help]\n\t"
 		"[-v|--verbose [-v|--verbose ...]]\n\t"
 		"[--areas <nr_areas>] [--areasize <size>]\n\t"
@@ -6344,13 +6345,14 @@ static void _dmsetup_usage(FILE *out)
 {
 	unsigned i;
 
-	fprintf(out, "Usage:\n\n"
-		"%s\n\t"
+	fprintf(out, "Usage: %s\n\t"
 		"[--version] [-h|--help [-c|-C|--columns]]\n\t"
 		"[-v|--verbose [-v|--verbose ...]] [-f|--force]\n\t"
 		"[--checks] [--manglename {none|hex|auto}]\n\t"
 		"[-r|--readonly] [--noopencount] [--noflush] [--nolockfs] [--inactive]\n\t"
+#ifdef UDEV_SYNC_SUPPORT
 		"[--udevcookie <cookie>] [--noudevrules] [--noudevsync] [--verifyudev]\n\t"
+#endif
 		"[-y|--yes] [--readahead {[+]<sectors>|auto|none}] [--retry]\n\t"
 		"[-c|-C|--columns] [-o <fields>] [-O|--sort <sort_fields>]\n\t"
 		"[-S|--select <selection>] [--nameprefixes]\n\t"
@@ -6371,7 +6373,7 @@ static void _dmsetup_usage(FILE *out)
 		"        and <flags> may be empty. Separate extra table lines with commas.\n"
 		"    E.g.: dev1,,,,0 100 linear 253:1 0,100 100 error;dev2,,,ro,0 1 error\n"
 		"Table_file contents may be supplied on stdin.\n"
-		"Options are: devno, devname, blkdevname.\n"
+		"Options are: devno, devname and blkdevname.\n"
 		"Tree specific options are: ascii, utf, vt100; compact, inverted, notrunc;\n"
 		"                           blkdevname, [no]device, active, open, rw and uuid.\n\n");
 }
@@ -6379,7 +6381,7 @@ static void _dmsetup_usage(FILE *out)
 static void _losetup_usage(FILE *out)
 {
 	fprintf(out,
-		"Usage:\n\n"
+		"Usage: "
 		"%s [-d|-a] [-e encryption] "
 		"[-o offset] [-f|loop_device] [file]\n\n",
 		_base_commands[_base_command].name);
@@ -6907,8 +6909,10 @@ static int _process_switches(int *argcp, char ***argvp, const char *dev_dir)
 		{"nosuffix",		no_argument, 0, NOSUFFIX_ARG},
 		{"notable",		no_argument, 0, NOTABLE_ARG},
 		{"notimesuffix",	no_argument, 0, NOTIMESUFFIX_ARG},
+#ifdef UDEV_SYNC_SUPPORT
 		{"noudevrules",		no_argument, 0, NOUDEVRULES_ARG},
 		{"noudevsync",		no_argument, 0, NOUDEVSYNC_ARG},
+#endif
 		{"options",	  required_argument, 0, OPTIONS_ARG},
 		{"precise",		no_argument, 0, PRECISE_ARG},
 		{"programid",	  required_argument, 0, PROGRAM_ID_ARG},
@@ -6931,7 +6935,9 @@ static int _process_switches(int *argcp, char ***argvp, const char *dev_dir)
 		{"table",	  required_argument, 0, TABLE_ARG},
 		{"target",	  required_argument, 0, TARGET_ARG},
 		{"tree",		no_argument, 0, TREE_ARG},
+#ifdef UDEV_SYNC_SUPPORT
 		{"udevcookie",	  required_argument, 0, UDEVCOOKIE_ARG},
+#endif
 		{"uid",		  required_argument, 0, UID_ARG},
 		{"unbuffered",		no_argument, 0, UNBUFFERED_ARG},
 		{"units",	  required_argument, 0, UNITS_ARG},
@@ -6939,7 +6945,9 @@ static int _process_switches(int *argcp, char ***argvp, const char *dev_dir)
 		{"userdata",	  required_argument, 0, USER_DATA_ARG},
 		{"uuid",	  required_argument, 0, UUID_ARG},
 		{"verbose",	  required_argument, 0, VERBOSE_ARG},
+#ifdef UDEV_SYNC_SUPPORT
 		{"verifyudev",		no_argument, 0, VERIFYUDEV_ARG},
+#endif
 		{"version",		no_argument, 0, VERSION_ARG},
 		{"yes",			no_argument, 0, YES_ARG},
 		{0, 0, 0, 0}
