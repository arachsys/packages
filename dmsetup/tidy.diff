diff --git a/libdm/dm-tools/dmfilemapd.c b/libdm/dm-tools/dmfilemapd.c
index 832722a..56774d2 100644
--- a/libdm/dm-tools/dmfilemapd.c
+++ b/libdm/dm-tools/dmfilemapd.c
@@ -262,7 +262,7 @@ static int _parse_args(int argc, char **argv, struct filemap_monitor *fm)
 
 	if (argc < 5) {
 		_early_log("Wrong number of arguments.");
-		_early_log("usage: %s", _usage);
+		_early_log("Usage: %s", _usage);
 		return 0;
 	}
 
diff --git a/libdm/dm-tools/dmsetup.c b/libdm/dm-tools/dmsetup.c
index a9c01f8..b5f5015 100644
--- a/libdm/dm-tools/dmsetup.c
+++ b/libdm/dm-tools/dmsetup.c
@@ -131,7 +131,7 @@ typedef enum {
 #define DMLOSETUP_CMD_NAME "dmlosetup"
 #define DMSTATS_CMD_NAME "dmstats"
 #define DMSETUP_STATS_CMD_NAME "dmsetup stats"
-#define DEVMAP_NAME_CMD_NAME "devmap_name"
+#define DEVMAP_NAME_CMD_NAME "dmname"
 
 static const struct {
 	cmd_name_t command;
@@ -6289,12 +6289,14 @@ static struct command _dmsetup_commands[] = {
 	{"wait", "<device> [<event_nr>] [--noflush]", 0, 2, 0, 0, _wait},
 	{"mknodes", "[<device>...]", 0, -1, 1, 0, _mknodes},
 	{"mangle", "[<device>...]", 0, -1, 1, 0, _mangle},
+#ifdef UDEV_SYNC_SUPPORT
 	{"udevcreatecookie", "", 0, 0, 0, 0, _udevcreatecookie},
 	{"udevreleasecookie", "[<cookie>]", 0, 1, 0, 0, _udevreleasecookie},
 	{"udevflags", "<cookie>", 1, 1, 0, 0, _udevflags},
 	{"udevcomplete", "<cookie>", 1, 1, 0, 0, _udevcomplete},
 	{"udevcomplete_all", "[<age_in_minutes>]", 0, 1, 0, 0, _udevcomplete_all},
 	{"udevcookies", "", 0, 0, 0, 0, _udevcookies},
+#endif
 	{"target-version", "[<target>...]", 1, -1, 1, 0, _target_version},
 	{"targets", "", 0, 0, 0, 0, _targets},
 	{"version", "", 0, 0, 0, 0, _version},
@@ -6316,17 +6318,16 @@ static void _stats_usage(FILE *out)
 {
 	int i;
 
-	fprintf(out, "Usage:\n\n"
-		"%s\n"
-		"        [-h|--help]\n"
-		"        [-v|--verbose [-v|--verbose ...]]\n"
-		"        [--areas <nr_areas>] [--areasize <size>]\n"
-		"        [--userdata <data>] [--clear]\n"
-		"        [--count <count>] [--interval <seconds>]\n"
-		"        [-o <fields>] [-O|--sort <sort_fields>]\n"
-		"	      [--programid <id>]\n"
-		"        [--start <start>] [--length <length>]\n"
-		"        [--segments] [--units <units>]\n\n",
+	fprintf(out, "Usage: %s\n"
+		"\t[-h|--help]\n"
+		"\t[-v|--verbose [-v|--verbose ...]]\n"
+		"\t[--areas <nr_areas>] [--areasize <size>]\n"
+		"\t[--userdata <data>] [--clear]\n"
+		"\t[--count <count>] [--interval <seconds>]\n"
+		"\t[-o <fields>] [-O|--sort <sort_fields>]\n"
+		"\t    [--programid <id>]\n"
+		"\t[--start <start>] [--length <length>]\n"
+		"\t[--segments] [--units <units>]\n\n",
 		_base_commands[_base_command].name);
 
 	for (i = 0; _stats_subcommands[i].name; i++)
@@ -6340,18 +6341,17 @@ static void _dmsetup_usage(FILE *out)
 {
 	int i;
 
-	fprintf(out, "Usage:\n\n"
-		"%s\n"
-		"        [--version] [-h|--help [-c|-C|--columns]]\n"
-		"        [-v|--verbose [-v|--verbose ...]] [-f|--force]\n"
-		"        [--checks] [--manglename {none|hex|auto}]\n"
-		"        [-r|--readonly] [--noopencount] [--noflush] [--nolockfs] [--inactive]\n"
-		"        [--udevcookie <cookie>] [--noudevrules] [--noudevsync] [--verifyudev]\n"
-		"        [-y|--yes] [--readahead {[+]<sectors>|auto|none}] [--retry]\n"
-		"        [-c|-C|--columns] [-o <fields>] [-O|--sort <sort_fields>]\n"
-		"        [-S|--select <selection>] [--nameprefixes]\n"
-		"        [--noheadings|--headings none|abbrev|full|0|1|2]\n"
-		"        [--separator <separator>]\n\n",
+	fprintf(out, "Usage: %s\n"
+		"\t[--version] [-h|--help [-c|-C|--columns]]\n"
+		"\t[-v|--verbose [-v|--verbose ...]] [-f|--force]\n"
+		"\t[--checks] [--manglename {none|hex|auto}]\n"
+		"\t[-r|--readonly] [--noopencount] [--noflush] [--nolockfs] [--inactive]\n"
+		"\t[--udevcookie <cookie>] [--noudevrules] [--noudevsync] [--verifyudev]\n"
+		"\t[-y|--yes] [--readahead {[+]<sectors>|auto|none}] [--retry]\n"
+		"\t[-c|-C|--columns] [-o <fields>] [-O|--sort <sort_fields>]\n"
+		"\t[-S|--select <selection>] [--nameprefixes]\n"
+		"\t[--noheadings|--headings none|abbrev|full|0|1|2]\n"
+		"\t[--separator <separator>]\n\n",
 		_base_commands[_base_command].name);
 
 	for (i = 0; _dmsetup_commands[i].name; i++)
@@ -6361,21 +6361,21 @@ static void _dmsetup_usage(FILE *out)
 		"-j <major> -m <minor>\n"
 		"<mangling_mode> is one of 'none', 'auto' and 'hex'.\n"
 		"<fields> are comma-separated.  Use 'help -c' for list.\n"
-		"<concise_device_specification> has single-device entries separated by semi-colons:\n"
+		"<concise_device_spec_list> has single-device entries separated by semi-colons:\n"
 		"    <name>,<uuid>,<minor>,<flags>,<table>\n"
 		"        where <flags> is 'ro' or 'rw' (the default) and any of <uuid>, <minor>\n"
 		"        and <flags> may be empty. Separate extra table lines with commas.\n"
 		"    E.g.: dev1,,,,0 100 linear 253:1 0,100 100 error;dev2,,,ro,0 1 error\n"
 		"Table_file contents may be supplied on stdin.\n"
-		"Options are: devno, devname, blkdevname.\n"
-		"Tree specific options are: ascii, utf, vt100; compact, inverted, notrunc;\n"
-		"                           blkdevname, [no]device, active, open, rw and uuid.\n\n");
+		"Options are: devno, devname and blkdevname.\n"
+		"Tree-specific options are: ascii, utf, vt100; compact, inverted, notrunc,\n"
+		"[no]device, active, open, rw and uuid.\n\n");
 }
 
 static void _losetup_usage(FILE *out)
 {
 	fprintf(out,
-		"Usage:\n\n"
+		"Usage: "
 		"%s [-d|-a] [-e encryption] "
 		"[-o offset] [-f|loop_device] [file]\n\n",
 		_base_commands[_base_command].name);
