if ! enabled bootstrap; then
  require gcc
fi

check() {
  url https://ftp.gnu.org/gnu/gcc/
  match gcc 14.2.0 'gcc-([0-9.]+)/'

  url https://ftp.gnu.org/gnu/binutils/
  match binutils 2.42 'binutils-([0-9.]+)\.tar'

  url https://ftp.gnu.org/gnu/gmp/
  match gmp 6.3.0 'gmp-([0-9.]+)\.tar'

  url https://libisl.sourceforge.io/
  match isl 0.26 'isl-([0-9.]+)\.tar'

  url https://ftp.gnu.org/gnu/mpc/
  match mpc 1.3.1 'mpc-([0-9.]+)\.tar'

  url https://ftp.gnu.org/gnu/mpfr/
  match mpfr 4.2.1 'mpfr-([0-9.]+)\.tar'
}

prepare() {
  unpack https://ftp.gnu.org/gnu/gcc/gcc-14.2.0/gcc-14.2.0.tar.xz
  unpack -d bu https://ftp.gnu.org/gnu/binutils/binutils-2.42.tar.xz
  unpack -d gmp https://ftp.gnu.org/gnu/gmp/gmp-6.3.0.tar.xz
  unpack -d isl https://libisl.sourceforge.io/isl-0.26.tar.xz
  unpack -d mpc https://ftp.gnu.org/gnu/mpc/mpc-1.3.1.tar.gz
  unpack -d mpfr https://ftp.gnu.org/gnu/mpfr/mpfr-4.2.1.tar.xz

  ln -s bu/{bfd,binutils,gas,gprof,ld,libctf,libsframe,opcodes} .

  apply isl.diff
  apply musl.diff
  apply no-toollib.diff
  apply paths.diff
  apply pure64.diff
  apply relro.diff
  apply rpath.diff

  tree 5426436ce7efd923f74c6a524fbb8e9734180289698cc7fce91565e78a866397
}

build() {
  # Work around a bug where makeinfo is required unconditionally:
  sed -i 's/\(^INFO_DEPS *=\).*/\1/' {bfd,gas}/Makefile.in

  auto-config --disable-bootstrap --disable-libsanitizer --disable-libssp \
    --disable-multilib --disable-nls --disable-symvers --disable-werror \
    --enable-__cxa_atexit --enable-default-pie --enable-default-ssp \
    --enable-deterministic-archives --enable-languages=c,c++,lto \
    --enable-plugins --enable-threads=posix --without-local-prefix \
    --with-gxx-include-dir=/lib/include/c++/gcc --with-isl \
    --with-lib-path=/lib:/lib/shared:/lib/static --with-linker-hash-style=gnu \
    --with-native-system-header-dir=/lib/include --with-slibdir=/lib/shared \
    --with-system-zlib libat_cv_have_ifunc=no $(
      case "$CHOST" in
        aarch64-*)
          echo --with-abi=lp64 --with-arch=armv8-a
          ;;
        armv7-*)
          echo --with-abi=aapcs-linux --with-arch=armv7-a \
            --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb \
            --with-tune=generic-armv7-a
          ;;
      esac
    )
  sed -i 's/^\(tooldir *=\).*/\1/' Makefile
  make all
  make -j1 install DESTDIR=/dst

  local TARGET=$(cd /dst/lib/gcc && echo *)
  local VERSION=$(cd /dst/lib/gcc/$TARGET && echo *)
  cp include/libiberty.h /dst/lib/include/
  ln -s ../gcc/$TARGET/$VERSION/liblto_plugin.so /dst/lib/bfd-plugins/
  mv /dst/lib/**/*.spec /dst/lib/gcc/$TARGET/$VERSION/
  rm -f /dst/bin/{$TARGET-*,ld.bfd,gccbug} /dst/**/{README,*.py}

  for TOOL in addr2line ar as c++filt cpp elfedit ld lto-dump nm objcopy \
              objdump ranlib readelf size strings strip; do
    mv -f /dst/bin/$TOOL /dst/bin/gcc-$TOOL
    ln -s gcc-$TOOL /dst/bin/$TOOL
  done

  ln -f -s gcc /dst/bin/cc
  ln -f -s g++ /dst/bin/c++

  image gcc-shared contains /dst/lib/{,shared/}lib{atomic,gcc_s,stdc++}.so*
  image - requires gcc-shared
}
