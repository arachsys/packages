diff --git a/src/cmd/go/internal/cfg/cfg.go b/src/cmd/go/internal/cfg/cfg.go
index 3715a19a..6f9401dc 100644
--- a/src/cmd/go/internal/cfg/cfg.go
+++ b/src/cmd/go/internal/cfg/cfg.go
@@ -452,6 +452,14 @@ func EnvOrAndChanged(name, def string) (v string, changed bool) {
 
 var SumdbDir = gopathDir("pkg/sumdb")
 
+func init() {
+	if dir, err := os.UserCacheDir(); err == nil {
+		dir = filepath.Join(dir, "go-mod")
+		GOMODCACHE, GOMODCACHEChanged = EnvOrAndChanged("GOMODCACHE", dir)
+		SumdbDir = filepath.Join(GOMODCACHE, "sumdb")
+	}
+}
+
 // GetArchEnv returns the name and setting of the
 // GOARCH-specific architecture environment variable.
 // If the current architecture has no GOARCH-specific variable,
diff --git a/src/cmd/internal/dwarf/dwarf.go b/src/cmd/internal/dwarf/dwarf.go
index 56b44a1..4a78528 100644
--- a/src/cmd/internal/dwarf/dwarf.go
+++ b/src/cmd/internal/dwarf/dwarf.go
@@ -1634,9 +1634,9 @@ func IsDWARFEnabledOnAIXLd(extld string) (bool, error) {
 		}
 	}
 	// gcc -Wl,-V output should be:
-	//   /usr/bin/ld: LD X.X.X(date)
+	//   /bin/ld: LD X.X.X(date)
 	//   ...
-	out = bytes.TrimPrefix(out, []byte("/usr/bin/ld: LD "))
+	out = bytes.TrimPrefix(out, []byte("/bin/ld: LD "))
 	vers := string(bytes.Split(out, []byte("("))[0])
 	subvers := strings.Split(vers, ".")
 	if len(subvers) != 3 {
diff --git a/src/log/syslog/syslog_unix.go b/src/log/syslog/syslog_unix.go
index a64eed2..c6867f3 100644
--- a/src/log/syslog/syslog_unix.go
+++ b/src/log/syslog/syslog_unix.go
@@ -16,7 +16,7 @@ import (
 
 func unixSyslog() (conn serverConn, err error) {
 	logTypes := []string{"unixgram", "unix"}
-	logPaths := []string{"/dev/log", "/var/run/syslog", "/var/run/log"}
+	logPaths := []string{"/dev/log"}
 	for _, network := range logTypes {
 		for _, path := range logPaths {
 			conn, err := net.Dial(network, path)
diff --git a/src/net/http/cgi/host.go b/src/net/http/cgi/host.go
index 58e9f71..4d9cde1 100644
--- a/src/net/http/cgi/host.go
+++ b/src/net/http/cgi/host.go
@@ -173,7 +173,7 @@ func (h *Handler) ServeHTTP(rw http.ResponseWriter, req *http.Request) {
 
 	envPath := os.Getenv("PATH")
 	if envPath == "" {
-		envPath = "/bin:/usr/bin:/usr/ucb:/usr/bsd:/usr/local/bin"
+		envPath = "/bin"
 	}
 	env = append(env, "PATH="+envPath)
 
