diff --git a/ping/ping.c b/ping/ping.c
index 27c72ca..9102923 100644
--- a/ping/ping.c
+++ b/ping/ping.c
@@ -63,6 +63,8 @@
 /* FIXME: global_rts will be removed in future */
 struct ping_rts *global_rts;
 
+char *_pr_addr(struct ping_rts *rts, void *sa, socklen_t salen, int resolve_name);
+
 #ifndef ICMP_FILTER
 #define ICMP_FILTER	1
 struct icmp_filter {
@@ -1726,9 +1728,30 @@ int ping4_parse_reply(struct ping_rts *rts, struct socket_st *sock,
 /*
  * pr_addr --
  *
- * Return an ascii host address optionally with a hostname.
+ * Return an ascii host address with reverse name resolution
  */
 char *pr_addr(struct ping_rts *rts, void *sa, socklen_t salen)
+{
+	return _pr_addr(rts, sa, salen, 1);
+}
+
+/*
+ * pr_raw_addr --
+ *
+ * Return an ascii host address.  Reverse name resolution is not performed.
+ */
+
+char *pr_raw_addr(struct ping_rts *rts, void *sa, socklen_t salen)
+{
+	return _pr_addr(rts, sa, salen, 0);
+}
+
+/*
+ * _pr_addr --
+ *
+ * Return an ascii host address optionally with a hostname.
+ */
+char *_pr_addr(struct ping_rts *rts, void *sa, socklen_t salen, int resolve_name)
 {
 	static char buffer[4096] = "";
 	static struct sockaddr_storage last_sa;
@@ -1745,10 +1768,10 @@ char *pr_addr(struct ping_rts *rts, void *sa, socklen_t salen)
 	rts->in_pr_addr = !setjmp(rts->pr_addr_jmp);
 
 	getnameinfo(sa, salen, address, sizeof address, NULL, 0, getnameinfo_flags | NI_NUMERICHOST);
-	if (!rts->exiting && !rts->opt_numeric)
+	if (!rts->exiting && resolve_name && !rts->opt_numeric)
 		getnameinfo(sa, salen, name, sizeof name, NULL, 0, getnameinfo_flags);
 
-	if (*name)
+	if (*name && strncmp(name, address, NI_MAXHOST))
 		snprintf(buffer, sizeof buffer, "%s (%s)", name, address);
 	else
 		snprintf(buffer, sizeof buffer, "%s", address);
diff --git a/ping/ping.h b/ping/ping.h
index ef358ad..bdcdf7c 100644
--- a/ping/ping.h
+++ b/ping/ping.h
@@ -388,6 +388,7 @@ static inline int disable_capability_admin(void)	{ return modify_capability(0);
 extern void drop_capabilities(void);
 
 char *pr_addr(struct ping_rts *rts, void *sa, socklen_t salen);
+char *pr_raw_addr(struct ping_rts *rts, void *sa, socklen_t salen);
 
 int is_ours(struct ping_rts *rts, socket_st *sock, uint16_t id);
 extern int pinger(struct ping_rts *rts, ping_func_set_st *fset, socket_st *sock);
diff --git a/ping/ping6_common.c b/ping/ping6_common.c
index 21333aa..a76c48f 100644
--- a/ping/ping6_common.c
+++ b/ping/ping6_common.c
@@ -396,7 +396,7 @@ int ping6_run(struct ping_rts *rts, int argc, char **argv, struct addrinfo *ai,
 			error(2, errno, _("can't send flowinfo"));
 	}
 
-	printf(_("PING %s(%s) "), rts->hostname, pr_addr(rts, &rts->whereto6, sizeof rts->whereto6));
+	printf(_("PING %s (%s) "), rts->hostname, pr_raw_addr(rts, &rts->whereto6, sizeof rts->whereto6));
 	if (rts->flowlabel)
 		printf(_(", flow 0x%05x, "), (unsigned)ntohl(rts->flowlabel));
 	if (rts->device || rts->opt_strictsource) {
