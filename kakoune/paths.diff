diff --git a/Makefile b/Makefile
index 1643b6d..d587f00 100644
--- a/Makefile
+++ b/Makefile
@@ -36,10 +36,10 @@ PREFIX = /usr/local
 DESTDIR = # root dir
 
 bindir = $(DESTDIR)$(PREFIX)/bin
-libexecdir = $(DESTDIR)$(PREFIX)/libexec/kak
-sharedir = $(DESTDIR)$(PREFIX)/share/kak
-docdir = $(DESTDIR)$(PREFIX)/share/doc/kak
-mandir = $(DESTDIR)$(PREFIX)/share/man/man1
+libexecdir = $(DESTDIR)$(PREFIX)/lib/kak
+sharedir = $(DESTDIR)$(PREFIX)/lib/kak
+docdir = $(DESTDIR)$(PREFIX)/lib/doc/kak
+mandir = $(DESTDIR)$(PREFIX)/lib/man/man1
 
 # Both Cygwin and MSYS2 have "_NT" in their uname.
 os != uname | sed 's/.*_NT.*/Windows/'
@@ -188,8 +188,8 @@ install: src/kak installdirs install-debug-$(debug) install-gzip-man-$(gzip_man)
 	cp colors/* $(sharedir)/colors
 	chmod 0644 $(sharedir)/colors/*
 
-	cp doc/pages/*.asciidoc README.asciidoc $(docdir)
-	chmod 0644 $(docdir)/*.asciidoc
+	cp doc/pages/*.asciidoc $(sharedir)/doc
+	chmod 0644 $(sharedir)/doc/*.asciidoc
 
 install-gzip-man-yes: gzip-man-yes
 	cp -f doc/kak.1.gz $(mandir)
diff --git a/doc/pages/options.asciidoc b/doc/pages/options.asciidoc
index 30cbdbd..d4c49ba 100644
--- a/doc/pages/options.asciidoc
+++ b/doc/pages/options.asciidoc
@@ -255,7 +255,7 @@ are exclusively available to built-in options.
     actions should hook on this option changing for activation/deactivation
 
 *path* `str-list`::
-    _default_ ./ %/ /usr/include +
+    _default_ ./ %/ /lib/include +
     directories to search for *gf* command and filenames completion
     `%/` represents the current buffer directory
 
diff --git a/rc/tools/man.kak b/rc/tools/man.kak
index 2fcc981..9d807ab 100644
--- a/rc/tools/man.kak
+++ b/rc/tools/man.kak
@@ -63,7 +63,7 @@ define-command -hidden -params ..3 man-impl %{ evaluate-commands %sh{
 
 define-command -params ..1 \
     -shell-script-candidates %{
-        find /usr/share/man/ $(printf %s "${MANPATH}" |
+        find /lib/man/ $(printf %s "${MANPATH}" |
             sed 's/:/ /') -name '*.[1-8]*' |
             sed 's,^.*/\(.*\)\.\([1-8][a-zA-Z]*\).*$,\1(\2),'
     } \
diff --git a/share/kak/kakrc b/share/kak/kakrc
index c421892..fbb4c8b 100644
--- a/share/kak/kakrc
+++ b/share/kak/kakrc
@@ -40,11 +40,9 @@ evaluate-commands %sh{
         autoload_directory ${kak_runtime}/autoload
     fi
 
-    if [ -f "${kak_runtime}/kakrc.local" ]; then
-        echo "source '${kak_runtime}/kakrc.local'"
-    fi
-
     if [ -f "${kak_config}/kakrc" ]; then
         echo "source '${kak_config}/kakrc'"
+    elif [ -f "/etc/kakrc" ]; then
+        echo "source '/etc/kakrc'"
     fi
 }
diff --git a/src/main.cc b/src/main.cc
index e3a590b..54bf165 100644
--- a/src/main.cc
+++ b/src/main.cc
@@ -202,12 +202,12 @@ String runtime_directory()
         return runtime_directory;
 
     char relpath[PATH_MAX+1];
-    format_to(relpath, "{}../share/kak", split_path(get_kak_binary_path()).first);
+    format_to(relpath, "{}../lib/kak", split_path(get_kak_binary_path()).first);
     struct stat st;
     if (stat(relpath, &st) == 0 and S_ISDIR(st.st_mode))
         return real_path(relpath);
 
-    return "/usr/share/kak";
+    return "/lib/kak";
 }
 
 String config_directory()
@@ -563,7 +563,7 @@ void register_options()
                       Regex{});
     reg.declare_option("filetype", "buffer filetype", ""_str);
     reg.declare_option("path", "path to consider when trying to find a file",
-                   Vector<String, MemoryDomain::Options>({ "./", "%/", "/usr/include" }));
+                   Vector<String, MemoryDomain::Options>({ "./", "%/", "/lib/include" }));
     reg.declare_option("completers", "insert mode completers to execute.",
                        InsertCompleterDescList({
                            InsertCompleterDesc{ InsertCompleterDesc::Filename, {} },
@@ -1292,7 +1292,7 @@ asm(".pushsection \".debug_gdb_scripts\", \"MS\"," PROGBITS ",1" R"(
 .byte 4
 .ascii "kakoune-inline-gdb.py\n"
 .ascii "import os.path\n"
-.ascii "sys.path.insert(0, os.path.dirname(gdb.current_objfile().filename) + '/../share/kak/gdb/')\n"
+.ascii "sys.path.insert(0, os.path.dirname(gdb.current_objfile().filename) + '/../lib/kak/gdb/')\n"
 .ascii "import gdb.printing\n"
 .ascii "import kakoune\n"
 .ascii "gdb.printing.register_pretty_printer(gdb.current_objfile(), kakoune.build_pretty_printer())\n\0"
diff --git a/src/shell_manager.cc b/src/shell_manager.cc
index e505fde..e790312 100644
--- a/src/shell_manager.cc
+++ b/src/shell_manager.cc
@@ -22,6 +22,7 @@
 #include <fcntl.h>
 #include <cstdlib>
 #include <errno.h>
+#include <paths.h>
 
 #if defined(__CYGWIN__)
 #define vfork fork
@@ -46,21 +47,39 @@ ShellManager::ShellManager(ConstArrayView<EnvVarDesc> builtin_env_vars)
         return S_ISREG(st.st_mode) and executable;
     };
 
+    if (const char *path = getenv("PATH"); not path or not *path)
+        setenv("PATH", _PATH_DEFPATH, 1);
+
+    if (const char* libexec_directory = getenv("KAKOUNE_LIBEXEC"))
+    {
+        auto path = format("{}:{}", libexec_directory, getenv("PATH"));
+        setenv("PATH", path.c_str(), 1);
+    }
+    else if (const char* runtime_directory = getenv("KAKOUNE_RUNTIME"))
+    {
+        auto path = format("{}:{}", runtime_directory, getenv("PATH"));
+        setenv("PATH", path.c_str(), 1);
+    }
+    else
+    {
+        auto path = format("{}../lib/kak", split_path(get_kak_binary_path()).first);
+        struct stat st;
+        if (stat(path.c_str(), &st) == 0 and S_ISDIR(st.st_mode))
+            path = format("{}:{}", real_path(path), getenv("PATH"));
+        else
+            path = format("/lib/kak:{}", getenv("PATH"));
+        setenv("PATH", path.c_str(), 1);
+    }
+
     if (const char* shell = getenv("KAKOUNE_POSIX_SHELL"))
     {
         if (not is_executable(shell))
             throw runtime_error{format("KAKOUNE_POSIX_SHELL '{}' is not executable", shell)};
         m_shell = shell;
     }
-    else // Get a guaranteed to be POSIX shell binary
+    else // Get a POSIX shell binary without overriding PATH
     {
-        #if defined(_CS_PATH)
-        auto size = confstr(_CS_PATH, nullptr, 0);
-        String path; path.resize(size-1, 0);
-        confstr(_CS_PATH, path.data(), size);
-        #else
-        StringView path = "/bin:/usr/bin";
-        #endif
+        StringView path = getenv("PATH");
         for (auto dir : StringView{path} | split<StringView>(':'))
         {
             auto candidate = format("{}/sh", dir);
@@ -73,14 +92,6 @@ ShellManager::ShellManager(ConstArrayView<EnvVarDesc> builtin_env_vars)
         if (m_shell.empty())
             throw runtime_error{format("unable to find a posix shell in {}", path)};
     }
-
-    // Add Kakoune binary location to the path to guarantee that %sh{ ... }
-    // have access to the kak command regardless of if the user installed it
-    {
-        const char* path = getenv("PATH");
-        auto new_path = format("{}../libexec/kak:{}", split_path(get_kak_binary_path()).first, path);
-        setenv("PATH", new_path.c_str(), 1);
-    }
 }
 
 namespace
