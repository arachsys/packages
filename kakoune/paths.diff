diff --git a/README.asciidoc b/README.asciidoc
index 93b6d93..d22645d 100644
--- a/README.asciidoc
+++ b/README.asciidoc
@@ -322,7 +322,7 @@ Configuration
 
 There are two directories containing Kakoune's scripts:
 
-* `runtime`: located in `../share/kak/` relative to the `kak` binary
+* `runtime`: located in `../lib/kak/` relative to the `kak` binary
   contains the system scripts, installed with Kakoune.
 * `userconf`: located in `$XDG_CONFIG_HOME/kak/`, which will fallback
   to `$HOME/.config/kak/` if `$XDG_CONFIG_HOME` is not set, containing
@@ -722,27 +722,27 @@ Kakrc
 ~~~~~
 
 If not launched with the `-n` switch, Kakoune will source the
-`../share/kak/kakrc` file relative to the `kak` binary, which
+`../lib/kak/kakrc` file relative to the `kak` binary, which
 will source additional files:
 
 If the `$XDG_CONFIG_HOME/kak/autoload` directory exists, load every
 `*.kak` files in it, and load recursively any subdirectory.
 
 If it does not exist, falls back to the site wide autoload directory
-in `../share/kak/autoload/`.
+in `../lib/kak/autoload/`.
 
 After that, if it exists, source the `$XDG_CONFIG_HOME/kak/kakrc` file
 which should be used for user configuration.
 
 In order to continue autoloading site-wide files with a local autoload
-directory, just add a symbolic link to `../share/kak/autoload/` into
+directory, just add a symbolic link to `../lib/kak/autoload/` into
 your local autoload directory.
 
 Color Schemes
 ~~~~~~~~~~~~~
 
 Kakoune ships with some color schemes that are installed to
-`../share/kak/colors/`. If `$XDG_CONFIG_HOME/kak/colors/` is present
+`../lib/kak/colors/`. If `$XDG_CONFIG_HOME/kak/colors/` is present
 the builtin command `colorscheme` will offer completion for those
 color schemes. If a scheme is duplicated in userspace, it will take
 precedence.
diff --git a/doc/kak.1 b/doc/kak.1
index 37fab36..5f823f8 100644
--- a/doc/kak.1
+++ b/doc/kak.1
@@ -76,7 +76,7 @@ Display Kakoune version and quit.
 .
 .It Fl n
 Do not load the system's kakrc.
-.Pq often, Pa /usr/share/kak/kakrc
+.Pq often, Pa /lib/kak/kakrc
 .
 .It Fl l
 List existing sessions.
@@ -201,7 +201,7 @@ to the path to
 binary location:
 .Pa <rtdir>
 =
-.Pa <path_to_kak_binary>/../share/kak .
+.Pa <path_to_kak_binary>/../lib/kak .
 .
 .Pp
 If not started with the
diff --git a/doc/pages/options.asciidoc b/doc/pages/options.asciidoc
index 30cbdbd..d4c49ba 100644
--- a/doc/pages/options.asciidoc
+++ b/doc/pages/options.asciidoc
@@ -255,7 +255,7 @@ are exclusively available to built-in options.
     actions should hook on this option changing for activation/deactivation
 
 *path* `str-list`::
-    _default_ ./ %/ /usr/include +
+    _default_ ./ %/ /lib/include +
     directories to search for *gf* command and filenames completion
     `%/` represents the current buffer directory
 
diff --git a/rc/tools/man.kak b/rc/tools/man.kak
index 2420735..4228309 100644
--- a/rc/tools/man.kak
+++ b/rc/tools/man.kak
@@ -63,7 +63,7 @@ define-command -hidden -params ..3 man-impl %{ evaluate-commands %sh{
 
 define-command -params ..1 \
     -shell-script-candidates %{
-        find /usr/share/man/ $(printf %s "${MANPATH}" | sed 's/:/ /') -name '*.[1-8]*' | sed 's,^.*/\(.*\)\.\([1-8][a-zA-Z]*\).*$,\1(\2),'
+        find /lib/man/ $(printf %s "${MANPATH}" | sed 's/:/ /') -name '*.[1-8]*' | sed 's,^.*/\(.*\)\.\([1-8][a-zA-Z]*\).*$,\1(\2),'
     } \
     -docstring %{
         man [<page>]: manpage viewer wrapper
diff --git a/src/Makefile b/src/Makefile
index 801a2e2..5661637 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -52,10 +52,10 @@ PREFIX ?= /usr/local
 DESTDIR ?= # root dir
 
 bindir := $(DESTDIR)$(PREFIX)/bin
-libexecdir := $(DESTDIR)$(PREFIX)/libexec/kak
-sharedir := $(DESTDIR)$(PREFIX)/share/kak
-docdir := $(DESTDIR)$(PREFIX)/share/doc/kak
-mandir := $(DESTDIR)$(PREFIX)/share/man/man1
+libexecdir := $(DESTDIR)$(PREFIX)/lib/kak
+sharedir := $(DESTDIR)$(PREFIX)/lib/kak
+docdir := $(DESTDIR)$(PREFIX)/lib/doc/kak
+mandir := $(DESTDIR)$(PREFIX)/lib/man/man1
 
 os := $(shell uname)
 
diff --git a/src/assert.cc b/src/assert.cc
index fd97c0b..604abef 100644
--- a/src/assert.cc
+++ b/src/assert.cc
@@ -27,16 +27,7 @@ private:
 
 bool notify_fatal_error(StringView msg)
 {
-#if defined(__CYGWIN__)
-    return MessageBox(NULL, msg.zstr(), "Kakoune: fatal error",
-                      MB_OKCANCEL | MB_ICONERROR) == IDOK;
-#elif defined(__linux__)
-    auto cmd = format("xmessage -buttons 'quit:0,ignore:1' '{}'", replace(msg, "'", "'\\''"));
-    int status = system(cmd.c_str());
-    return (WIFEXITED(status)) ? (WEXITSTATUS(status)) == 1 : false;
-#else
     return false;
-#endif
 }
 
 void on_assert_failed(const char* message)
diff --git a/src/main.cc b/src/main.cc
index 1c8ab45..2308d7c 100644
--- a/src/main.cc
+++ b/src/main.cc
@@ -180,12 +180,12 @@ String runtime_directory()
         return runtime_directory;
 
     char relpath[PATH_MAX+1];
-    format_to(relpath, "{}../share/kak", split_path(get_kak_binary_path()).first);
+    format_to(relpath, "{}../lib/kak", split_path(get_kak_binary_path()).first);
     struct stat st;
     if (stat(relpath, &st) == 0 and S_ISDIR(st.st_mode))
         return real_path(relpath);
 
-    return "/usr/share/kak";
+    return "/lib/kak";
 }
 
 String config_directory()
@@ -541,7 +541,7 @@ void register_options()
                       Regex{});
     reg.declare_option("filetype", "buffer filetype", ""_str);
     reg.declare_option("path", "path to consider when trying to find a file",
-                   Vector<String, MemoryDomain::Options>({ "./", "%/", "/usr/include" }));
+                   Vector<String, MemoryDomain::Options>({ "./", "%/", "/lib/include" }));
     reg.declare_option("completers", "insert mode completers to execute.",
                        InsertCompleterDescList({
                            InsertCompleterDesc{ InsertCompleterDesc::Filename, {} },
@@ -1287,7 +1287,7 @@ asm(".pushsection \".debug_gdb_scripts\", \"MS\"," PROGBITS ",1" R"(
 .byte 4
 .ascii "kakoune-inline-gdb.py\n"
 .ascii "import os.path\n"
-.ascii "sys.path.insert(0, os.path.dirname(gdb.current_objfile().filename) + '/../share/kak/gdb/')\n"
+.ascii "sys.path.insert(0, os.path.dirname(gdb.current_objfile().filename) + '/../lib/kak/gdb/')\n"
 .ascii "import gdb.printing\n"
 .ascii "import kakoune\n"
 .ascii "gdb.printing.register_pretty_printer(gdb.current_objfile(), kakoune.build_pretty_printer())\n\0"
diff --git a/src/shell_manager.cc b/src/shell_manager.cc
index 96cfb06..1252973 100644
--- a/src/shell_manager.cc
+++ b/src/shell_manager.cc
@@ -21,6 +21,7 @@
 #include <fcntl.h>
 #include <cstdlib>
 #include <errno.h>
+#include <paths.h>
 
 #if defined(__CYGWIN__)
 #define vfork fork
@@ -45,21 +46,39 @@ ShellManager::ShellManager(ConstArrayView<EnvVarDesc> builtin_env_vars)
         return S_ISREG(st.st_mode) and executable;
     };
 
+    if (const char *path = getenv("PATH"); not path or not *path)
+        setenv("PATH", _PATH_DEFPATH, 1);
+
+    if (const char* libexec_directory = getenv("KAKOUNE_LIBEXEC"))
+    {
+        auto path = format("{}:{}", libexec_directory, getenv("PATH"));
+        setenv("PATH", path.c_str(), 1);
+    }
+    else if (const char* runtime_directory = getenv("KAKOUNE_RUNTIME"))
+    {
+        auto path = format("{}:{}", runtime_directory, getenv("PATH"));
+        setenv("PATH", path.c_str(), 1);
+    }
+    else
+    {
+        auto path = format("{}../lib/kak", split_path(get_kak_binary_path()).first);
+        struct stat st;
+        if (stat(path.c_str(), &st) == 0 and S_ISDIR(st.st_mode))
+            path = format("{}:{}", real_path(path), getenv("PATH"));
+        else
+            path = format("/lib/kak:{}", getenv("PATH"));
+        setenv("PATH", path.c_str(), 1);
+    }
+
     if (const char* shell = getenv("KAKOUNE_POSIX_SHELL"))
     {
         if (not is_executable(shell))
             throw runtime_error{format("KAKOUNE_POSIX_SHELL '{}' is not executable", shell)};
         m_shell = shell;
     }
-    else // Get a guaranteed to be POSIX shell binary
+    else // Get a POSIX shell binary without overriding PATH
     {
-        #if defined(_CS_PATH)
-        auto size = confstr(_CS_PATH, nullptr, 0);
-        String path; path.resize(size-1, 0);
-        confstr(_CS_PATH, path.data(), size);
-        #else
-        StringView path = "/bin:/usr/bin";
-        #endif
+        StringView path = getenv("PATH");
         for (auto dir : StringView{path} | split<StringView>(':'))
         {
             auto candidate = format("{}/sh", dir);
@@ -72,14 +91,6 @@ ShellManager::ShellManager(ConstArrayView<EnvVarDesc> builtin_env_vars)
         if (m_shell.empty())
             throw runtime_error{format("unable to find a posix shell in {}", path)};
     }
-
-    // Add Kakoune binary location to the path to guarantee that %sh{ ... }
-    // have access to the kak command regardless of if the user installed it
-    {
-        const char* path = getenv("PATH");
-        auto new_path = format("{}../libexec/kak:{}", split_path(get_kak_binary_path()).first, path);
-        setenv("PATH", new_path.c_str(), 1);
-    }
 }
 
 namespace
