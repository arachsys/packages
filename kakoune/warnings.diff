diff --git a/src/Makefile b/src/Makefile
index 5661637..7b62a1e 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -86,7 +86,7 @@ CXXFLAGS += -pedantic -std=c++2a -g -Wall -Wextra -Wno-unused-parameter -Wno-sig
 compiler := $(shell $(CXX) --version)
 ifneq (,$(findstring clang,$(compiler)))
     CXXFLAGS += -frelaxed-template-template-args -Wno-ambiguous-reversed-operator
-else ifneq (,$(findstring g++,$(compiler)))
+else ifneq (,$(findstring GCC,$(compiler)))
     CXXFLAGS += -Wno-init-list-lifetime
 endif
 
diff --git a/src/display_buffer.hh b/src/display_buffer.hh
index 0fef525..c13bd0b 100644
--- a/src/display_buffer.hh
+++ b/src/display_buffer.hh
@@ -141,7 +141,7 @@ public:
         if (auto first = std::find_if(beg, end, has_buffer_range); first != end)
         {
             auto& last = *std::find_if(std::reverse_iterator(end), std::reverse_iterator(first), has_buffer_range);
-            m_range.begin = std::min(m_range.begin, first->begin());
+            m_range.begin = std::min(m_range.begin, (*first).begin());
             m_range.end = std::max(m_range.end, last.end());
         }
         return m_atoms.insert(pos, beg, end);
diff --git a/src/json.cc b/src/json.cc
index 3661ac8..35850b7 100644
--- a/src/json.cc
+++ b/src/json.cc
@@ -20,7 +20,7 @@ String to_json(StringView str)
     for (auto it = str.begin(), end = str.end(); it != end; )
     {
         auto next = std::find_if(it, end, [](char c) {
-            return c == '\\' or c == '"' or (c >= 0 and c <= 0x1F);
+            return c == '\\' or c == '"' or (unsigned char) c <= 0x1F;
         });
 
         res += StringView{it, next};
@@ -28,7 +28,7 @@ String to_json(StringView str)
             break;
 
         char buf[7] = {'\\', *next, 0};
-        if (*next >= 0 and *next <= 0x1F)
+        if ((unsigned char) *next <= 0x1F)
             sprintf(buf, "\\u%04x", *next);
 
         res += buf;
diff --git a/src/regex_impl.cc b/src/regex_impl.cc
index a380e7f..21a494a 100644
--- a/src/regex_impl.cc
+++ b/src/regex_impl.cc
@@ -44,7 +44,7 @@ struct ParsedRegex
         NegativeLookBehind,
     };
 
-    struct Quantifier
+    struct [[gnu::packed]] Quantifier
     {
         enum Type : char
         {
diff --git a/src/terminal_ui.cc b/src/terminal_ui.cc
index a35d3c7..0d00bca 100644
--- a/src/terminal_ui.cc
+++ b/src/terminal_ui.cc
@@ -30,8 +30,8 @@ static String fix_atom_text(StringView str)
     auto pos = str.begin();
     for (auto it = str.begin(), end = str.end(); it != end; ++it)
     {
-        char c = *it;
-        if (c >= 0 and c <= 0x1F)
+        unsigned char c = *it;
+        if (c <= 0x1F)
         {
             res += StringView{pos, it};
             res += String{Codepoint{(uint32_t)(0x2400 + c)}};
