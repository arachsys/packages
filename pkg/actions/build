action() {
  unset FORCE OUT SRC
  while getopts :fo:s: OPTION; do
    case $OPTION in
      f)
        FORCE=force
        ;;
      o)
        OUT=$OPTARG
        mkdir -p "$OUT"
        ;;
      s)
        SRC=$OPTARG
        mkdir -p "$SRC"
        ;;
      *)
        usage
        ;;
    esac
  done
  shift $((OPTIND - 1))

  if [[ $# -lt 1 ]]; then
    usage
  fi

  PKG=$(locate "$PKGDIR" "$1")
  mkdir -p "$CACHEDIR" "$IMGDIR"

  ROOT=$(mktemp -d "$IMGDIR/root.XXXXXX")
  trap 'rm -f -r --one-file-system "$ROOT"' EXIT
  chmod 0755 "$ROOT"

  sandbox() {
    PKG=$PKG SRC=$SRC pkg sandbox "$ROOT" "$@"
  }

  populate "$ROOT" build
  mkdir -p "$ROOT/pkg"
  mapfile -t REQUIRED < <(sandbox pkg requirements "${PKG##*/}" "${@:2}")
  populate "$ROOT" "${REQUIRED[@]}"

  if [[ -z $SRC ]] || ( set -- "$SRC"/* && [[ $# -eq 0 ]] ); then
    mkdir -p "$ROOT/src" "$ROOT/var/cache"
    sandbox pkg prepare "${PKG##*/}" "${@:2}" $FORCE
    rmdir "$ROOT/var/cache" "$ROOT/var"
  fi

  mkdir -p "$ROOT/img/${PKG##*/}" "$ROOT/src"
  ln -s "img/${PKG##*/}" "$ROOT/dst"
  sandbox unshare -n pkg build "${PKG##*/}" "${@:2}" $FORCE

  for IMG in "$ROOT"/img/*; do
    if [[ -e "${OUT:-$IMGDIR}/${IMG##*/}" ]]; then
      echo "Replacing existing image in ${OUT:-$IMGDIR}/${IMG##*/}"
      rm -f -r "${OUT:-$IMGDIR}/${IMG##*/}"
      mv "$IMG" "${OUT:-$IMGDIR}/${IMG##*/}"
    else
      echo "Installing new image in ${OUT:-$IMGDIR}/${IMG##*/}"
      mv "$IMG" "${OUT:-$IMGDIR}/${IMG##*/}"
    fi
  done
}

helper() {
  source "$LIBRARY/build"
  setup /pkg "${@:2}"

  if enabled force; then
    trap '(( $? )) && echo "Build failed" && PS1="[build] \\$ " bash' EXIT
  else
    trap '(( $? )) && echo "Build failed"' EXIT
  fi

  build 2>&1
  tidy

  for IMG in /img/*; do
    if [[ -d "$IMG" ]]; then
      mkdir -p "$IMG/info"
      printf '%s\n' "$1" >"$IMG/info/source"
    fi
    if [[ -f "$IMG/info/requirements" ]]; then
      sort -o "$IMG/info/requirements" -u "$IMG/info/requirements"
    fi
  done

  maybe hardlink -q -t -- /img/*/info
  find /img -depth -exec touch -r / {} +
}

usage() {
  cat >&2 <<EOF
Usage: ${0##*/} build [-f] [-o OUTDIR] [-s SRC] PKG [FEATURE]...

Build an image for package PKG with the specified FEATURE options in the
image directory \$IMGDIR. Images for all the build requirements and base
packages must already exist in the image directory. Any existing image
for PKG is replaced on successful completion; otherwise it is untouched.

An alternative output directory to \$IMGDIR can be specified with the -o
option, and a pre-prepared tree of source code to build can be provided
with the -s option. The -f flag forces an update of invalid tree hashes
and starts a debug shell in the sandbox if the build fails, equivalent
to including 'force' in the FEATURE list.

Set the package source tree location with \$PKGDIR, the image directory
with \$IMGDIR and the download cache directory with \$CACHEDIR.
EOF
  exit 64
}

if [[ $$ -eq 1 ]]; then
  helper "$@"
else
  action "$@"
fi
