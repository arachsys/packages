unset DEBUG SRC
while getopts :ds: OPTION; do
  case $OPTION in
    d)
      DEBUG=1
      ;;
    s)
      if [[ -d $OPTARG ]]; then
        SRC=$OPTARG
      else
        die "Prepared source tree $OPTARG not found"
      fi
      ;;
  esac
done
shift $(($OPTIND - 1))

if [[ $# -lt 1 ]]; then
  die "$(< $LIBRARY/help)"
fi

PKG=$(locate "$PKGDIR" "$1")
mkdir -p "$CACHEDIR" "$IMGDIR"

ROOT=$(mktemp -d "$IMGDIR/${1##*/}.XXXXXX")
if [[ -n $DEBUG ]]; then
  trap 'echo "Build root left in $ROOT" >&2' EXIT
else
  trap 'rm -f -r --one-file-system "$ROOT"' EXIT
fi

helper() {
  PKG=$PKG SRC=$SRC pkg contain "$ROOT" pkg helper "$@"
}

populate "$ROOT" base
mkdir -p "$ROOT"/{dst,pkg,src}
mapfile -t REQUIRED < <(helper requirements "${PKG##*/}" "${@:2}")
populate "$ROOT" "${REQUIRED[@]}"
helper build "${PKG##*/}" "${@:2}"

if [[ -n $DEBUG ]]; then
  echo "Debug mode: not installing or replacing images"
else
  for IMG in "$ROOT"/dst/img/*; do
    if [[ -e "$IMGDIR/${IMG##*/}" ]]; then
      echo "Replacing existing image in $IMGDIR/${IMG##*/}"
      rm -f -r "$IMGDIR/${IMG##*/}"
      mv "$IMG" "$IMGDIR/${IMG##*/}"
    else
      echo "Installing new image in $IMGDIR/${IMG##*/}"
      mv "$IMG" "$IMGDIR/${IMG##*/}"
    fi
  done
fi
