unset JOBS
while getopts :p: OPTION; do
  case $OPTION in
    p)
      if [[ $OPTARG == [1-9]*([0-9]) ]]; then
        JOBS=$OPTARG
      else
        die "Invalid parallel job limit: $OPTARG"
      fi
      ;;
  esac
done
shift $(($OPTIND - 1))

mkdir -p "$CACHEDIR" "$IMGDIR"
ROOT=$(mktemp -d "$IMGDIR/root.XXXXXX")
trap 'rm -f -r --one-file-system "$ROOT"' EXIT
chmod 0755 "$ROOT"

populate "$ROOT" build
mkdir -p "$ROOT/pkg"

check() {
  while set -- "$1" $(jobs -p) && [[ $# -gt ${JOBS:-16} ]]; do
    wait -n
  done
  PKG=$1 pkg sandbox "$ROOT" pkg helper check "${1##*/}" &
}

if [[ $# -eq 0 ]]; then
  trap wait EXIT
  for PKGBUILD in "$PKGDIR"/*/build; do
    check "${PKGBUILD%/build}"
  done
else
  trap wait EXIT
  for PKG in "$@"; do
    PKG=$(locate "$PKGDIR" "$PKG")
    check "$PKG"
  done
fi | sort -k 1 -t :
