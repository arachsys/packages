action() {
  if [[ $# -lt 1 ]]; then
    die "$(< $LIBRARY/help)"
  elif [[ $2 != ?(-) ]] && [[ -e "$2" ]]; then
    die "Cannot unpack sources: $2 already exists"
  fi

  PKG=$(locate "$PKGDIR" "$1")
  mkdir -p "$CACHEDIR" "$IMGDIR"

  ROOT=$(mktemp -d "$IMGDIR/${1##*/}.XXXXXX")
  trap 'rm -f -r --one-file-system "$ROOT"' EXIT
  chmod 0755 "$ROOT"

  sandbox() {
    PKG=$PKG SRC= pkg sandbox "$ROOT" "$@"
  }

  populate "$ROOT" build
  mkdir -p "$ROOT/pkg"
  mapfile -t REQUIRED < <(sandbox pkg requirements "${PKG##*/}" "${@:3}")
  populate "$ROOT" "${REQUIRED[@]}"

  mkdir -p "$ROOT/src" "$ROOT/var/cache"
  sandbox pkg prepare "${PKG##*/}" "${@:3}"

  if [[ $2 != ?(-) ]]; then
    mv "$ROOT/src" "$2"
  fi
}

helper() {
  PKG=/pkg
  setup "${@:2}"
  source /pkg/build

  if ( set -- /src/* && [[ $# -ne 0 ]] ); then
    die "Cannot unpack sources: directory is not empty"
  fi

  prepare "${@:2}"
  find /src -depth -exec touch -h -r /src {} +
}

if [[ $$ -eq 1 ]]; then
  helper "$@"
else
  action "$@"
fi
