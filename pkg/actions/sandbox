if [[ $# -lt 1 ]] || [[ ! -d "$1" ]]; then
  die "${0##*/} sandbox is for internal use only"
elif [[ $# -lt 2 ]]; then
  set -- "$1" bash -l
fi

if [[ $UID -ne 0 ]]; then
  exec unshare -r --map-auto "$0" sandbox "$@"
elif [[ $$ -ne 1 ]]; then
  exec unshare -f -m -p --kill-child "$0" sandbox "$@"
fi

mount -o bind "$1" "$1"

[[ -d $1/proc ]] && mount -t proc proc "$1/proc"
[[ -d $1/run ]] && mount -t tmpfs -o mode=0755 tmpfs "$1/run"
[[ -d $1/run ]] && mkdir -m 1777 "$1/run/lock" "$1/run/shm"
[[ -d $1/tmp ]] && mount -t tmpfs -o mode=1777 tmpfs "$1/tmp"

if [[ -d $1/dev ]]; then
  mount -t tmpfs -o mode=0755 tmpfs "$1/dev"
  for NODE in full null random tty urandom zero; do
    touch "$1/dev/$NODE" && mount -o bind /dev/$NODE "$1/dev/$NODE"
  done

  mkdir -p "$1/dev/pts"
  mount -t devpts -o ptmxmode=0666 devpts "$1/dev/pts"
  ln -s pts/ptmx "$1/dev/ptmx"

  ln -s /proc/self/fd "$1/dev/fd"
  ln -s fd/0 "$1/dev/stdin"
  ln -s fd/1 "$1/dev/stdout"
  ln -s fd/2 "$1/dev/stderr"
fi

[[ -d $1/img ]] && mount -o bind "$1/img" "$1/img"
[[ -d $1/pkg ]] && mount -o bind "${PKG:-$1/pkg}" "$1/pkg"
[[ -d $1/src ]] && mount -o bind "${SRC:-$1/src}" "$1/src"
[[ -d $1/var ]] && mount -o bind "$1/var" "$1/var"

if [[ -d $1/var/cache ]] && [[ -d $CACHEDIR ]]; then
  mount -o bind "$CACHEDIR" "$1/var/cache"
fi

mount -o bind,remount,ro "$1"
pivot "$1"
cd / && [[ -d src ]] && cd src
exec /bin/env -i HOME=/ PATH=/bin TERM="$TERM" "${@:2}"
