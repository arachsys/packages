diff --git a/Lib/site.py b/Lib/site.py
index 89a81c55..095e91e9 100644
--- a/Lib/site.py
+++ b/Lib/site.py
@@ -473,8 +473,7 @@ def gethistoryfile():
         history = os.environ.get("PYTHON_HISTORY")
         if history:
             return history
-    return os.path.join(os.path.expanduser('~'),
-        '.python_history')
+    return None
 
 
 def enablerlcompleter():
@@ -547,8 +546,7 @@ def register_readline():
             pass
 
     if readline is None or readline.get_current_history_length() == 0:
-        # If no history was loaded, default to .python_history,
-        # or PYTHON_HISTORY.
+        # If no history was loaded, default to PYTHON_HISTORY.
         # The guard is necessary to avoid doubling history size at
         # each interpreter exit when readline was already configured
         # through a PYTHONSTARTUP hook, see:
@@ -564,20 +562,21 @@ def register_readline():
             readline_module = readline
             exceptions = OSError
 
-        try:
-            readline_module.read_history_file(history)
-        except exceptions:
-            pass
-
-        def write_history():
+        if history:
             try:
-                readline_module.write_history_file(history)
-            except (FileNotFoundError, PermissionError):
-                # home directory does not exist or is not writable
-                # https://bugs.python.org/issue19891
+                readline_module.read_history_file(history)
+            except exceptions:
                 pass
 
-        atexit.register(write_history)
+            def write_history():
+                try:
+                    readline_module.write_history_file(history)
+                except (FileNotFoundError, PermissionError):
+                    # home directory does not exist or is not writable
+                    # https://bugs.python.org/issue19891
+                    pass
+
+            atexit.register(write_history)
 
 
 def venv(known_paths):
