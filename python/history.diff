diff --git a/Lib/site.py b/Lib/site.py
index aedf3639..959306f6 100644
--- a/Lib/site.py
+++ b/Lib/site.py
@@ -474,8 +474,7 @@ def gethistoryfile():
         history = os.environ.get("PYTHON_HISTORY")
         if history:
             return history
-    return os.path.join(os.path.expanduser('~'),
-        '.python_history')
+    return None
 
 
 def enablerlcompleter():
@@ -548,8 +547,7 @@ def register_readline():
             pass
 
     if readline is None or readline.get_current_history_length() == 0:
-        # If no history was loaded, default to .python_history,
-        # or PYTHON_HISTORY.
+        # If no history was loaded, default to PYTHON_HISTORY.
         # The guard is necessary to avoid doubling history size at
         # each interpreter exit when readline was already configured
         # through a PYTHONSTARTUP hook, see:
@@ -565,25 +563,26 @@ def register_readline():
             readline_module = readline
             exceptions = OSError
 
-        try:
-            readline_module.read_history_file(history)
-        except exceptions:
-            pass
-
-        def write_history():
+        if history:
             try:
-                readline_module.write_history_file(history)
-            except (FileNotFoundError, PermissionError):
-                # home directory does not exist or is not writable
-                # https://bugs.python.org/issue19891
+                readline_module.read_history_file(history)
+            except exceptions:
                 pass
-            except OSError:
-                if errno.EROFS:
-                    pass  # gh-128066: read-only file system
-                else:
-                    raise
 
-        atexit.register(write_history)
+            def write_history():
+                try:
+                    readline_module.write_history_file(history)
+                except (FileNotFoundError, PermissionError):
+                    # home directory does not exist or is not writable
+                    # https://bugs.python.org/issue19891
+                    pass
+                except OSError:
+                    if errno.EROFS:
+                        pass  # gh-128066: read-only file system
+                    else:
+                        raise
+
+            atexit.register(write_history)
 
 
 def venv(known_paths):
