diff --git a/Lib/aifc.py b/Lib/aifc.py
index ed5da7d..d64a7b7 100644
--- a/Lib/aifc.py
+++ b/Lib/aifc.py
@@ -924,7 +924,7 @@ def open(f, mode=None):
 if __name__ == '__main__':
     import sys
     if not sys.argv[1:]:
-        sys.argv.append('/usr/demos/data/audio/bach.aiff')
+        sys.argv.append('/lib/demos/data/audio/bach.aiff')
     fn = sys.argv[1]
     with open(fn, 'r') as f:
         print("Reading", fn)
diff --git a/Lib/cgi.py b/Lib/cgi.py
index 1e880e5..83a6667 100755
--- a/Lib/cgi.py
+++ b/Lib/cgi.py
@@ -1,13 +1,4 @@
-#! /usr/local/bin/python
-
-# NOTE: the above "/usr/local/bin/python" is NOT a mistake.  It is
-# intentionally NOT "/usr/bin/env python".  On many systems
-# (e.g. Solaris), /usr/local/bin is not in $PATH as passed to CGI
-# scripts, and /usr/local/bin is the default directory where Python is
-# installed, so /usr/bin/env would be unable to find python.  Granted,
-# binary installations by Linux vendors often install Python in
-# /usr/bin.  So let those vendors patch cgi.py to match their choice
-# of installation.
+#!/bin/python3
 
 """Support module for CGI (Common Gateway Interface) scripts.
 
diff --git a/Lib/ctypes/util.py b/Lib/ctypes/util.py
index 0c2510e..268fbfd 100644
--- a/Lib/ctypes/util.py
+++ b/Lib/ctypes/util.py
@@ -90,7 +90,7 @@ elif sys.platform.startswith("aix"):
     from ctypes._aix import find_library
 
 elif os.name == "posix":
-    # Andreas Degert's find functions, using gcc, /sbin/ldconfig, objdump
+    # Andreas Degert's find functions, using gcc, /bin/ldconfig, objdump
     import re, tempfile
 
     def _is_elf(filename):
@@ -209,7 +209,7 @@ elif os.name == "posix":
             expr = os.fsencode(expr)
 
             try:
-                proc = subprocess.Popen(('/sbin/ldconfig', '-r'),
+                proc = subprocess.Popen(('/bin/ldconfig', '-r'),
                                         stdout=subprocess.PIPE,
                                         stderr=subprocess.DEVNULL)
             except OSError:  # E.g. command not found
diff --git a/Lib/distutils/command/install.py b/Lib/distutils/command/install.py
index aaa300e..9e42942 100644
--- a/Lib/distutils/command/install.py
+++ b/Lib/distutils/command/install.py
@@ -29,16 +29,16 @@ WINDOWS_SCHEME = {
 
 INSTALL_SCHEMES = {
     'unix_prefix': {
-        'purelib': '$base/lib/python$py_version_short/site-packages',
-        'platlib': '$platbase/$platlibdir/python$py_version_short/site-packages',
-        'headers': '$base/include/python$py_version_short$abiflags/$dist_name',
+        'purelib': '$base/lib/python/site-packages',
+        'platlib': '$platbase/$platlibdir/python/site-packages',
+        'headers': '$base/lib/include/python/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
         },
     'unix_home': {
         'purelib': '$base/lib/python',
         'platlib': '$base/$platlibdir/python',
-        'headers': '$base/include/python/$dist_name',
+        'headers': '$base/lib/include/python/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
         },
@@ -50,8 +50,8 @@ if HAS_USER_SITE:
     INSTALL_SCHEMES['nt_user'] = {
         'purelib': '$usersite',
         'platlib': '$usersite',
-        'headers': '$userbase/Python$py_version_nodot/Include/$dist_name',
-        'scripts': '$userbase/Python$py_version_nodot/Scripts',
+        'headers': '$userbase/Python/Include/$dist_name',
+        'scripts': '$userbase/Python/Scripts',
         'data'   : '$userbase',
         }
 
@@ -59,7 +59,7 @@ if HAS_USER_SITE:
         'purelib': '$usersite',
         'platlib': '$usersite',
         'headers':
-            '$userbase/include/python$py_version_short$abiflags/$dist_name',
+            '$userbase/lib/include/python/$dist_name',
         'scripts': '$userbase/bin',
         'data'   : '$userbase',
         }
@@ -302,8 +302,8 @@ class install(Command):
                            }
 
         if HAS_USER_SITE:
-            self.config_vars['userbase'] = self.install_userbase
-            self.config_vars['usersite'] = self.install_usersite
+            self.config_vars['userbase'] = self.install_userbase.rstrip(os.sep)
+            self.config_vars['usersite'] = self.install_usersite.rstrip(os.sep)
 
         self.expand_basedirs()
 
@@ -311,8 +311,8 @@ class install(Command):
 
         # Now define config vars for the base directories so we can expand
         # everything else.
-        self.config_vars['base'] = self.install_base
-        self.config_vars['platbase'] = self.install_platbase
+        self.config_vars['base'] = self.install_base.rstrip(os.sep)
+        self.config_vars['platbase'] = self.install_platbase.rstrip(os.sep)
 
         if DEBUG:
             from pprint import pprint
diff --git a/Lib/distutils/sysconfig.py b/Lib/distutils/sysconfig.py
index 37feae5..1bb5e8e 100644
--- a/Lib/distutils/sysconfig.py
+++ b/Lib/distutils/sysconfig.py
@@ -109,8 +109,8 @@ def get_python_inc(plat_specific=0, prefix=None):
             else:
                 incdir = os.path.join(get_config_var('srcdir'), 'Include')
                 return os.path.normpath(incdir)
-        python_dir = 'python' + get_python_version() + build_flags
-        return os.path.join(prefix, "include", python_dir)
+        python_dir = 'python'
+        return os.path.join(prefix, "lib", "include", python_dir)
     elif os.name == "nt":
         if python_build:
             # Include both the include and PC dir to ensure we can find
@@ -152,8 +152,7 @@ def get_python_lib(plat_specific=0, standard_lib=0, prefix=None):
         else:
             # Pure Python
             libdir = "lib"
-        libpython = os.path.join(prefix, libdir,
-                                 "python" + get_python_version())
+        libpython = os.path.join(prefix, libdir, "python")
         if standard_lib:
             return libpython
         else:
diff --git a/Lib/encodings/rot_13.py b/Lib/encodings/rot_13.py
index 5627bfb..9d732d6 100755
--- a/Lib/encodings/rot_13.py
+++ b/Lib/encodings/rot_13.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/bin/python3
 """ Python Character Mapping Codec for ROT13.
 
 This codec de/encodes from str to str.
diff --git a/Lib/mailcap.py b/Lib/mailcap.py
index ae416a8..142e8b5 100644
--- a/Lib/mailcap.py
+++ b/Lib/mailcap.py
@@ -54,8 +54,7 @@ def listmailcapfiles():
         else:
             # Don't bother with getpwuid()
             home = '.' # Last resort
-        mailcaps = [home + '/.mailcap', '/etc/mailcap',
-                '/usr/etc/mailcap', '/usr/local/etc/mailcap']
+        mailcaps = [home + '/.mailcap', '/etc/mailcap']
     return mailcaps
 
 
diff --git a/Lib/mimetypes.py b/Lib/mimetypes.py
index 92c2a47..d5fe4dd 100644
--- a/Lib/mimetypes.py
+++ b/Lib/mimetypes.py
@@ -41,14 +41,6 @@ __all__ = [
 
 knownfiles = [
     "/etc/mime.types",
-    "/etc/httpd/mime.types",                    # Mac OS X
-    "/etc/httpd/conf/mime.types",               # Apache
-    "/etc/apache/mime.types",                   # Apache 1
-    "/etc/apache2/mime.types",                  # Apache 2
-    "/usr/local/etc/httpd/conf/mime.types",
-    "/usr/local/lib/netscape/mime.types",
-    "/usr/local/etc/httpd/conf/mime.types",     # Apache 1.2
-    "/usr/local/etc/mime.types",                # Apache 1.3
     ]
 
 inited = False
diff --git a/Lib/posixpath.py b/Lib/posixpath.py
index ecb4e5a..3ad1737 100644
--- a/Lib/posixpath.py
+++ b/Lib/posixpath.py
@@ -18,7 +18,7 @@ pardir = '..'
 extsep = '.'
 sep = '/'
 pathsep = ':'
-defpath = '/bin:/usr/bin'
+defpath = '/bin'
 altsep = None
 devnull = '/dev/null'
 
@@ -347,11 +347,6 @@ def normpath(path):
     if path == empty:
         return dot
     initial_slashes = path.startswith(sep)
-    # POSIX allows one or two initial slashes, but treats three or more
-    # as single slash.
-    if (initial_slashes and
-        path.startswith(sep*2) and not path.startswith(sep*3)):
-        initial_slashes = 2
     comps = path.split(sep)
     new_comps = []
     for comp in comps:
@@ -365,7 +360,7 @@ def normpath(path):
     comps = new_comps
     path = sep.join(comps)
     if initial_slashes:
-        path = sep*initial_slashes + path
+        path = sep + path
     return path or dot
 
 
diff --git a/Lib/site.py b/Lib/site.py
index 9e617af..de82d33 100644
--- a/Lib/site.py
+++ b/Lib/site.py
@@ -267,12 +267,12 @@ def _get_path(userbase):
     version = sys.version_info
 
     if os.name == 'nt':
-        return f'{userbase}\\Python{version[0]}{version[1]}\\site-packages'
+        return f'{userbase}\\Python\\site-packages'
 
     if sys.platform == 'darwin' and sys._framework:
         return f'{userbase}/lib/python/site-packages'
 
-    return f'{userbase}/lib/python{version[0]}.{version[1]}/site-packages'
+    return f'{userbase}/lib/python/site-packages'
 
 
 def getuserbase():
@@ -341,7 +341,7 @@ def getsitepackages(prefixes=None):
         if os.sep == '/':
             for libdir in libdirs:
                 path = os.path.join(prefix, libdir,
-                                    "python%d.%d" % sys.version_info[:2],
+                                    "python",
                                     "site-packages")
                 sitepackages.append(path)
         else:
diff --git a/Lib/sysconfig.py b/Lib/sysconfig.py
index e3f79bf..7f0ac12 100644
--- a/Lib/sysconfig.py
+++ b/Lib/sysconfig.py
@@ -25,14 +25,14 @@ _ALWAYS_STR = {
 
 _INSTALL_SCHEMES = {
     'posix_prefix': {
-        'stdlib': '{installed_base}/{platlibdir}/python{py_version_short}',
-        'platstdlib': '{platbase}/{platlibdir}/python{py_version_short}',
-        'purelib': '{base}/lib/python{py_version_short}/site-packages',
-        'platlib': '{platbase}/{platlibdir}/python{py_version_short}/site-packages',
+        'stdlib': '{installed_base}/{platlibdir}/python',
+        'platstdlib': '{platbase}/{platlibdir}/python',
+        'purelib': '{base}/lib/python/site-packages',
+        'platlib': '{platbase}/{platlibdir}/python/site-packages',
         'include':
-            '{installed_base}/include/python{py_version_short}{abiflags}',
+            '{installed_base}/lib/include/python',
         'platinclude':
-            '{installed_platbase}/include/python{py_version_short}{abiflags}',
+            '{installed_platbase}/lib/include/python',
         'scripts': '{base}/bin',
         'data': '{base}',
         },
@@ -41,8 +41,8 @@ _INSTALL_SCHEMES = {
         'platstdlib': '{base}/lib/python',
         'purelib': '{base}/lib/python',
         'platlib': '{base}/lib/python',
-        'include': '{installed_base}/include/python',
-        'platinclude': '{installed_base}/include/python',
+        'include': '{installed_base}/lib/include/python',
+        'platinclude': '{installed_base}/lib/include/python',
         'scripts': '{base}/bin',
         'data': '{base}',
         },
@@ -58,20 +58,20 @@ _INSTALL_SCHEMES = {
         },
     # NOTE: When modifying "purelib" scheme, update site._get_path() too.
     'nt_user': {
-        'stdlib': '{userbase}/Python{py_version_nodot}',
-        'platstdlib': '{userbase}/Python{py_version_nodot}',
-        'purelib': '{userbase}/Python{py_version_nodot}/site-packages',
-        'platlib': '{userbase}/Python{py_version_nodot}/site-packages',
-        'include': '{userbase}/Python{py_version_nodot}/Include',
-        'scripts': '{userbase}/Python{py_version_nodot}/Scripts',
+        'stdlib': '{userbase}/Python',
+        'platstdlib': '{userbase}/Python',
+        'purelib': '{userbase}/Python/site-packages',
+        'platlib': '{userbase}/Python/site-packages',
+        'include': '{userbase}/Python/Include',
+        'scripts': '{userbase}/Python/Scripts',
         'data': '{userbase}',
         },
     'posix_user': {
-        'stdlib': '{userbase}/{platlibdir}/python{py_version_short}',
-        'platstdlib': '{userbase}/{platlibdir}/python{py_version_short}',
-        'purelib': '{userbase}/lib/python{py_version_short}/site-packages',
-        'platlib': '{userbase}/{platlibdir}/python{py_version_short}/site-packages',
-        'include': '{userbase}/include/python{py_version_short}',
+        'stdlib': '{userbase}/{platlibdir}/python',
+        'platstdlib': '{userbase}/{platlibdir}/python',
+        'purelib': '{userbase}/lib/python/site-packages',
+        'platlib': '{userbase}/{platlibdir}/python/site-packages',
+        'include': '{userbase}/include/python',
         'scripts': '{userbase}/bin',
         'data': '{userbase}',
         },
diff --git a/Lib/tempfile.py b/Lib/tempfile.py
index 770f72c..70cf90e 100644
--- a/Lib/tempfile.py
+++ b/Lib/tempfile.py
@@ -165,7 +165,7 @@ def _candidate_tempdir_list():
                          _os.path.expandvars(r'%SYSTEMROOT%\Temp'),
                          r'c:\temp', r'c:\tmp', r'\temp', r'\tmp' ])
     else:
-        dirlist.extend([ '/tmp', '/var/tmp', '/usr/tmp' ])
+        dirlist.extend([ '/tmp' ])
 
     # As a last resort, the current directory.
     try:
diff --git a/Lib/uuid.py b/Lib/uuid.py
index 5ae0a3e..43c286e 100644
--- a/Lib/uuid.py
+++ b/Lib/uuid.py
@@ -361,7 +361,6 @@ def _get_command_stdout(command, *args):
 
     try:
         path_dirs = os.environ.get('PATH', os.defpath).split(os.pathsep)
-        path_dirs.extend(['/sbin', '/usr/sbin'])
         executable = shutil.which(command, path=os.pathsep.join(path_dirs))
         if executable is None:
             return None
diff --git a/Makefile.pre.in b/Makefile.pre.in
index 3137d93..52507cd 100644
--- a/Makefile.pre.in
+++ b/Makefile.pre.in
@@ -142,16 +142,16 @@ BINDIR=		@bindir@
 LIBDIR=		@libdir@
 MANDIR=		@mandir@
 INCLUDEDIR=	@includedir@
-CONFINCLUDEDIR=	$(exec_prefix)/include
+CONFINCLUDEDIR=	$(exec_prefix)/lib/include
 PLATLIBDIR=	@PLATLIBDIR@
 SCRIPTDIR=	$(prefix)/$(PLATLIBDIR)
 ABIFLAGS=	@ABIFLAGS@
 
 # Detailed destination directories
 BINLIBDEST=	@BINLIBDEST@
-LIBDEST=	$(SCRIPTDIR)/python$(VERSION)
-INCLUDEPY=	$(INCLUDEDIR)/python$(LDVERSION)
-CONFINCLUDEPY=	$(CONFINCLUDEDIR)/python$(LDVERSION)
+LIBDEST=	$(SCRIPTDIR)/python
+INCLUDEPY=	$(INCLUDEDIR)/python
+CONFINCLUDEPY=	$(CONFINCLUDEDIR)/python
 
 # Symbols used for using shared libraries
 SHLIB_SUFFIX=	@SHLIB_SUFFIX@
diff --git a/Modules/getpath.c b/Modules/getpath.c
index 4035819..9f05289 100644
--- a/Modules/getpath.c
+++ b/Modules/getpath.c
@@ -1461,7 +1461,7 @@ calculate_init(PyCalculatePath *calculate, const PyConfig *config)
     }
 
     // <platlibdir> / "pythonX.Y"
-    wchar_t *pyversion = Py_DecodeLocale("python" VERSION, &len);
+    wchar_t *pyversion = Py_DecodeLocale("python", &len);
     if (!pyversion) {
         return DECODE_LOCALE_ERR("VERSION macro", len);
     }
diff --git a/configure b/configure
index c7a7291..5630cfe 100755
--- a/configure
+++ b/configure
@@ -15401,7 +15401,7 @@ fi
 
 
 
-BINLIBDEST='$(LIBDIR)/python$(VERSION)'
+BINLIBDEST='$(LIBDIR)/python'
 
 
 # Check for --with-platlibdir
@@ -15437,9 +15437,9 @@ fi
 
 
 if test x$PLATFORM_TRIPLET = x; then
-  LIBPL='$(prefix)'"/${PLATLIBDIR}/python${VERSION}/config-${LDVERSION}"
+  LIBPL='$(prefix)'"/${PLATLIBDIR}/python/config-${LDVERSION}"
 else
-  LIBPL='$(prefix)'"/${PLATLIBDIR}/python${VERSION}/config-${LDVERSION}-${PLATFORM_TRIPLET}"
+  LIBPL='$(prefix)'"/${PLATLIBDIR}/python/config-${LDVERSION}-${PLATFORM_TRIPLET}"
 fi
 
 
diff --git a/setup.py b/setup.py
index d42eb9d..4ccf083 100644
--- a/setup.py
+++ b/setup.py
@@ -644,9 +644,11 @@ class PyBuildExt(build_ext):
 
         if multiarch_path_component != '':
             add_dir_to_list(self.compiler.library_dirs,
-                            '/usr/lib/' + multiarch_path_component)
+                            '/lib/shared/' + multiarch_path_component)
+            add_dir_to_list(self.compiler.library_dirs,
+                            '/lib/static/' + multiarch_path_component)
             add_dir_to_list(self.compiler.include_dirs,
-                            '/usr/include/' + multiarch_path_component)
+                            '/lib/include/' + multiarch_path_component)
             return
 
         if not find_executable('dpkg-architecture'):
@@ -665,9 +667,11 @@ class PyBuildExt(build_ext):
                 with open(tmpfile) as fp:
                     multiarch_path_component = fp.readline().strip()
                 add_dir_to_list(self.compiler.library_dirs,
-                                '/usr/lib/' + multiarch_path_component)
+                                '/lib/shared/' + multiarch_path_component)
+                add_dir_to_list(self.compiler.library_dirs,
+                                '/lib/static/' + multiarch_path_component)
                 add_dir_to_list(self.compiler.include_dirs,
-                                '/usr/include/' + multiarch_path_component)
+                                '/lib/include/' + multiarch_path_component)
         finally:
             os.unlink(tmpfile)
 
@@ -750,8 +754,8 @@ class PyBuildExt(build_ext):
             add_dir_to_list(self.compiler.include_dirs,
                             sysconfig.get_config_var("INCLUDEDIR"))
 
-        system_lib_dirs = ['/lib64', '/usr/lib64', '/lib', '/usr/lib']
-        system_include_dirs = ['/usr/include']
+        system_lib_dirs = ['/lib/shared', '/lib/static', '/lib']
+        system_include_dirs = ['/lib/include']
         # lib_dirs and inc_dirs are used to search for files;
         # if a file is found in one of those directories, it can
         # be assumed that no additional -I,-L directives are needed.
@@ -1039,11 +1043,11 @@ class PyBuildExt(build_ext):
             elif curses_library:
                 readline_libs.append(curses_library)
             elif self.compiler.find_library_file(self.lib_dirs +
-                                                     ['/usr/lib/termcap'],
+                                                     ['/lib/termcap'],
                                                      'termcap'):
                 readline_libs.append('termcap')
             self.add(Extension('readline', ['readline.c'],
-                               library_dirs=['/usr/lib/termcap'],
+                               library_dirs=['/lib/termcap'],
                                extra_link_args=readline_extra_link_args,
                                libraries=readline_libs))
         else:
@@ -1057,7 +1061,7 @@ class PyBuildExt(build_ext):
         if curses_library == 'ncursesw':
             curses_defines.append(('HAVE_NCURSESW', '1'))
             if not CROSS_COMPILING:
-                curses_includes.append('/usr/include/ncursesw')
+                curses_includes.append('/lib/include/ncursesw')
             # Bug 1464056: If _curses.so links with ncursesw,
             # _curses_panel.so must link with panelw.
             panel_library = 'panelw'
@@ -1186,33 +1190,17 @@ class PyBuildExt(build_ext):
         # construct a list of paths to look for the header file in on
         # top of the normal inc_dirs.
         db_inc_paths = [
-            '/usr/include/db4',
-            '/usr/local/include/db4',
-            '/opt/sfw/include/db4',
-            '/usr/include/db3',
-            '/usr/local/include/db3',
-            '/opt/sfw/include/db3',
-            # Fink defaults (http://fink.sourceforge.net/)
-            '/sw/include/db4',
-            '/sw/include/db3',
+            '/lib/include/db4',
+            '/lib/include/db3',
         ]
         # 4.x minor number specific paths
         for x in gen_db_minor_ver_nums(4):
-            db_inc_paths.append('/usr/include/db4%d' % x)
-            db_inc_paths.append('/usr/include/db4.%d' % x)
-            db_inc_paths.append('/usr/local/BerkeleyDB.4.%d/include' % x)
-            db_inc_paths.append('/usr/local/include/db4%d' % x)
-            db_inc_paths.append('/pkg/db-4.%d/include' % x)
-            db_inc_paths.append('/opt/db-4.%d/include' % x)
-            # MacPorts default (http://www.macports.org/)
-            db_inc_paths.append('/opt/local/include/db4%d' % x)
+            db_inc_paths.append('/lib/include/db4%d' % x)
+            db_inc_paths.append('/lib/include/db4.%d' % x)
         # 3.x minor number specific paths
         for x in gen_db_minor_ver_nums(3):
-            db_inc_paths.append('/usr/include/db3%d' % x)
-            db_inc_paths.append('/usr/local/BerkeleyDB.3.%d/include' % x)
-            db_inc_paths.append('/usr/local/include/db3%d' % x)
-            db_inc_paths.append('/pkg/db-3.%d/include' % x)
-            db_inc_paths.append('/opt/db-3.%d/include' % x)
+            db_inc_paths.append('/lib/include/db3%d' % x)
+            db_inc_paths.append('/lib/include/db3.%d' % x)
 
         if CROSS_COMPILING:
             db_inc_paths = []
@@ -1440,12 +1428,9 @@ class PyBuildExt(build_ext):
         # We hunt for #define SQLITE_VERSION "n.n.n"
         # We need to find >= sqlite version 3.3.9, for sqlite3_prepare_v2
         sqlite_incdir = sqlite_libdir = None
-        sqlite_inc_paths = [ '/usr/include',
-                             '/usr/include/sqlite',
-                             '/usr/include/sqlite3',
-                             '/usr/local/include',
-                             '/usr/local/include/sqlite',
-                             '/usr/local/include/sqlite3',
+        sqlite_inc_paths = [ '/lib/include',
+                             '/lib/include/sqlite',
+                             '/lib/include/sqlite3',
                              ]
         if CROSS_COMPILING:
             sqlite_inc_paths = []
@@ -1763,7 +1748,7 @@ class PyBuildExt(build_ext):
 
     def detect_uuid(self):
         # Build the _uuid module if possible
-        uuid_incs = find_file("uuid.h", self.inc_dirs, ["/usr/include/uuid"])
+        uuid_incs = find_file("uuid.h", self.inc_dirs, ["/lib/include/uuid"])
         if uuid_incs is not None:
             if self.compiler.find_library_file(self.lib_dirs, 'uuid'):
                 uuid_libs = ['uuid']
