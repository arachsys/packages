diff --git a/configure b/configure
index 9908ae25..a4d5c681 100755
--- a/configure
+++ b/configure
@@ -34290,10 +34290,10 @@ case "$target_os" in #(
      ;;
 esac
 
-rubylibdir='${rubylibprefix}/${ruby_version}'
-rubyarchdir=${multiarch+'${rubyarchprefix}/${ruby_version}'}${multiarch-'${rubylibdir}/${arch}'}
+rubylibdir='${rubylibprefix}'
+rubyarchdir=${multiarch+'${rubyarchprefix}'}${multiarch-'${rubylibdir}'}
 
-rubyarchprefix=${multiarch+'${archlibdir}/${RUBY_BASE_NAME}'}${multiarch-'${rubylibprefix}/${arch}'}
+rubyarchprefix=${multiarch+'${archlibdir}/${RUBY_BASE_NAME}'}${multiarch-'${rubylibprefix}'}
 
 # Check whether --with-rubyarchprefix was given.
 if test ${with_rubyarchprefix+y}
diff --git a/configure.ac b/configure.ac
index 30e197bf..bbd1c198 100644
--- a/configure.ac
+++ b/configure.ac
@@ -4316,10 +4316,10 @@ AS_CASE(["$target_os"],
     rubyw_install_name='$(RUBYW_INSTALL_NAME)'
     ])
 
-rubylibdir='${rubylibprefix}/${ruby_version}'
-rubyarchdir=${multiarch+'${rubyarchprefix}/${ruby_version}'}${multiarch-'${rubylibdir}/${arch}'}
+rubylibdir='${rubylibprefix}'
+rubyarchdir=${multiarch+'${rubyarchprefix}'}${multiarch-'${rubylibdir}'}
 
-rubyarchprefix=${multiarch+'${archlibdir}/${RUBY_BASE_NAME}'}${multiarch-'${rubylibprefix}/${arch}'}
+rubyarchprefix=${multiarch+'${archlibdir}/${RUBY_BASE_NAME}'}${multiarch-'${rubylibprefix}'}
 AC_ARG_WITH(rubyarchprefix,
 	    AS_HELP_STRING([--with-rubyarchprefix=DIR],
 			   [prefix for architecture dependent ruby libraries [[RUBYLIBPREFIX/ARCH]]]),
diff --git a/lib/rdoc.rb b/lib/rdoc.rb
index b42059c7..af5d30fc 100644
--- a/lib/rdoc.rb
+++ b/lib/rdoc.rb
@@ -141,7 +141,7 @@ module RDoc
       require 'fileutils'
       begin
         # XDG
-        xdg_data_home = ENV["XDG_DATA_HOME"] || File.join(File.expand_path("~"), '.local', 'share')
+        xdg_data_home = ENV["XDG_DATA_HOME"] || File.join(File.expand_path("~"), '.local', 'lib')
         unless File.exist?(xdg_data_home)
           FileUtils.mkdir_p xdg_data_home
         end
diff --git a/lib/rubygems/defaults.rb b/lib/rubygems/defaults.rb
index 1bd208fe..e1dc7b73 100644
--- a/lib/rubygems/defaults.rb
+++ b/lib/rubygems/defaults.rb
@@ -21,7 +21,7 @@ module Gem
   # specified in the environment
 
   def self.default_spec_cache_dir
-    default_spec_cache_dir = File.join Gem.user_home, ".gem", "specs"
+    default_spec_cache_dir = File.join Gem.data_home, "gem", "specs"
 
     unless File.exist?(default_spec_cache_dir)
       default_spec_cache_dir = File.join Gem.cache_home, "gem", "specs"
@@ -35,7 +35,7 @@ module Gem
   # specified in the environment
 
   def self.default_dir
-    @default_dir ||= File.join(RbConfig::CONFIG["rubylibprefix"], "gems", RbConfig::CONFIG["ruby_version"])
+    @default_dir ||= File.join(RbConfig::CONFIG["rubylibprefix"], "gems")
   end
 
   ##
@@ -101,8 +101,7 @@ module Gem
   # Path for gems in the user's home directory
 
   def self.user_dir
-    gem_dir = File.join(Gem.user_home, ".gem")
-    gem_dir = File.join(Gem.data_home, "gem") unless File.exist?(gem_dir)
+    gem_dir = File.join(Gem.data_home, "gem")
     parts = [gem_dir, ruby_engine]
     parts << RbConfig::CONFIG["ruby_version"] unless RbConfig::CONFIG["ruby_version"].empty?
     File.join parts
@@ -119,12 +118,7 @@ module Gem
   # Finds the user's config file
 
   def self.find_config_file
-    gemrc = File.join Gem.user_home, ".gemrc"
-    if File.exist? gemrc
-      gemrc
-    else
-      File.join Gem.config_home, "gem", "gemrc"
-    end
+    File.join Gem.config_home, "gem", "gemrc"
   end
 
   ##
@@ -152,7 +146,7 @@ module Gem
   # The path to standard location of the user's data directory.
 
   def self.data_home
-    @data_home ||= ENV["XDG_DATA_HOME"] || File.join(Gem.user_home, ".local", "share")
+    @data_home ||= ENV["XDG_DATA_HOME"] || File.join(Gem.user_home, ".local", "lib")
   end
 
   ##
@@ -213,26 +207,14 @@ module Gem
   # The default signing key path
 
   def self.default_key_path
-    default_key_path = File.join Gem.user_home, ".gem", "gem-private_key.pem"
-
-    unless File.exist?(default_key_path)
-      default_key_path = File.join Gem.data_home, "gem", "gem-private_key.pem"
-    end
-
-    default_key_path
+    File.join Gem.data_home, "gem", "gem-private_key.pem"
   end
 
   ##
   # The default signing certificate chain path
 
   def self.default_cert_path
-    default_cert_path = File.join Gem.user_home, ".gem", "gem-public_cert.pem"
-
-    unless File.exist?(default_cert_path)
-      default_cert_path = File.join Gem.data_home, "gem", "gem-public_cert.pem"
-    end
-
-    default_cert_path
+    File.join Gem.data_home, "gem", "gem-public_cert.pem"
   end
 
   ##
