diff --git a/src/bootstrap/bootstrap.py b/src/bootstrap/bootstrap.py
index 68400ba0..3310de46 100644
--- a/src/bootstrap/bootstrap.py
+++ b/src/bootstrap/bootstrap.py
@@ -705,7 +705,7 @@ class RustBuild(object):
                 self.fix_bin_or_dylib("{}/bin/rustc".format(bin_root))
                 self.fix_bin_or_dylib("{}/bin/rustdoc".format(bin_root))
                 self.fix_bin_or_dylib(
-                    "{}/libexec/rust-analyzer-proc-macro-srv".format(bin_root)
+                    "{}/bin/rust-analyzer-proc-macro-srv".format(bin_root)
                 )
                 lib_dir = "{}/lib".format(bin_root)
                 rustlib_bin_dir = "{}/rustlib/{}/bin".format(lib_dir, self.build)
diff --git a/src/bootstrap/src/core/build_steps/dist.rs b/src/bootstrap/src/core/build_steps/dist.rs
index 83f71aee..6afbff95 100644
--- a/src/bootstrap/src/core/build_steps/dist.rs
+++ b/src/bootstrap/src/core/build_steps/dist.rs
@@ -432,7 +432,7 @@ impl Step for Rustc {
                 },
                 builder.kind,
             ) {
-                let dst = image.join("libexec");
+                let dst = image.join("bin");
                 builder.install(&ra_proc_macro_srv.tool_path, &dst, FileType::Executable);
             }
 
diff --git a/src/bootstrap/src/core/build_steps/tool.rs b/src/bootstrap/src/core/build_steps/tool.rs
index cd57e06a..84062737 100644
--- a/src/bootstrap/src/core/build_steps/tool.rs
+++ b/src/bootstrap/src/core/build_steps/tool.rs
@@ -954,7 +954,7 @@ impl Step for RustAnalyzerProcMacroSrv {
 
         // Copy `rust-analyzer-proc-macro-srv` to `<sysroot>/libexec/`
         // so that r-a can use it.
-        let libexec_path = builder.sysroot(self.compiler).join("libexec");
+        let libexec_path = builder.sysroot(self.compiler).join("bin");
         t!(fs::create_dir_all(&libexec_path));
         builder.copy_link(
             &tool_result.tool_path,
diff --git a/src/bootstrap/src/core/download.rs b/src/bootstrap/src/core/download.rs
index 5bd947f6..0f7b13e0 100644
--- a/src/bootstrap/src/core/download.rs
+++ b/src/bootstrap/src/core/download.rs
@@ -591,7 +591,7 @@ impl Config {
                 self.fix_bin_or_dylib(&bin_root.join("bin").join("rustc"));
                 self.fix_bin_or_dylib(&bin_root.join("bin").join("rustdoc"));
                 self.fix_bin_or_dylib(
-                    &bin_root.join("libexec").join("rust-analyzer-proc-macro-srv"),
+                    &bin_root.join("bin").join("rust-analyzer-proc-macro-srv"),
                 );
                 let lib_dir = bin_root.join("lib");
                 for lib in t!(fs::read_dir(&lib_dir), lib_dir.display().to_string()) {
diff --git a/src/tools/rust-analyzer/crates/project-model/src/sysroot.rs b/src/tools/rust-analyzer/crates/project-model/src/sysroot.rs
index 13812e96..1ee54294 100644
--- a/src/tools/rust-analyzer/crates/project-model/src/sysroot.rs
+++ b/src/tools/rust-analyzer/crates/project-model/src/sysroot.rs
@@ -143,7 +143,7 @@ impl Sysroot {
         let Some(root) = self.root() else {
             return Err(anyhow::format_err!("no sysroot",));
         };
-        ["libexec", "lib"]
+        ["bin", "lib"]
             .into_iter()
             .map(|segment| root.join(segment).join("rust-analyzer-proc-macro-srv"))
             .find_map(|server_path| probe_for_binary(server_path.into()))
