diff --git a/src/bootstrap/bootstrap.py b/src/bootstrap/bootstrap.py
index f44a05a6b..2e55d1861 100644
--- a/src/bootstrap/bootstrap.py
+++ b/src/bootstrap/bootstrap.py
@@ -596,7 +596,7 @@ class RustBuild(object):
 
                 self.fix_bin_or_dylib("{}/bin/rustc".format(bin_root))
                 self.fix_bin_or_dylib("{}/bin/rustdoc".format(bin_root))
-                self.fix_bin_or_dylib("{}/libexec/rust-analyzer-proc-macro-srv".format(bin_root))
+                self.fix_bin_or_dylib("{}/bin/rust-analyzer-proc-macro-srv".format(bin_root))
                 lib_dir = "{}/lib".format(bin_root)
                 for lib in os.listdir(lib_dir):
                     if lib.endswith(".so"):
diff --git a/src/bootstrap/dist.rs b/src/bootstrap/dist.rs
index 32da4ac29..1144ec431 100644
--- a/src/bootstrap/dist.rs
+++ b/src/bootstrap/dist.rs
@@ -423,7 +423,7 @@ impl Step for Rustc {
                 },
                 builder.kind,
             ) {
-                builder.install(&ra_proc_macro_srv, &image.join("libexec"), 0o755);
+                builder.install(&ra_proc_macro_srv, &image.join("bin"), 0o755);
             }
 
             let libdir_relative = builder.libdir_relative(compiler);
diff --git a/src/bootstrap/download.rs b/src/bootstrap/download.rs
index a4135b06e..c57fec567 100644
--- a/src/bootstrap/download.rs
+++ b/src/bootstrap/download.rs
@@ -484,7 +484,7 @@ impl Config {
                 self.fix_bin_or_dylib(&bin_root.join("bin").join("rustc"));
                 self.fix_bin_or_dylib(&bin_root.join("bin").join("rustdoc"));
                 self.fix_bin_or_dylib(
-                    &bin_root.join("libexec").join("rust-analyzer-proc-macro-srv"),
+                    &bin_root.join("bin").join("rust-analyzer-proc-macro-srv"),
                 );
                 let lib_dir = bin_root.join("lib");
                 for lib in t!(fs::read_dir(&lib_dir), lib_dir.display().to_string()) {
diff --git a/src/bootstrap/tool.rs b/src/bootstrap/tool.rs
index e6d27757a..387797fc8 100644
--- a/src/bootstrap/tool.rs
+++ b/src/bootstrap/tool.rs
@@ -689,7 +689,7 @@ impl Step for RustAnalyzerProcMacroSrv {
 
         // Copy `rust-analyzer-proc-macro-srv` to `<sysroot>/libexec/`
         // so that r-a can use it.
-        let libexec_path = builder.sysroot(self.compiler).join("libexec");
+        let libexec_path = builder.sysroot(self.compiler).join("bin");
         t!(fs::create_dir_all(&libexec_path));
         builder.copy(&path, &libexec_path.join("rust-analyzer-proc-macro-srv"));
 
diff --git a/src/tools/rust-analyzer/crates/project-model/src/workspace.rs b/src/tools/rust-analyzer/crates/project-model/src/workspace.rs
index f51ea7eeb..c86b04501 100644
--- a/src/tools/rust-analyzer/crates/project-model/src/workspace.rs
+++ b/src/tools/rust-analyzer/crates/project-model/src/workspace.rs
@@ -446,7 +446,7 @@ impl ProjectWorkspace {
             | ProjectWorkspace::DetachedFiles { sysroot: Ok(sysroot), .. } => {
                 let standalone_server_name =
                     format!("rust-analyzer-proc-macro-srv{}", std::env::consts::EXE_SUFFIX);
-                ["libexec", "lib"]
+                ["bin", "lib"]
                     .into_iter()
                     .map(|segment| sysroot.root().join(segment).join(&standalone_server_name))
                     .find(|server_path| std::fs::metadata(server_path).is_ok())
