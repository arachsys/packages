diff --git a/src/change_dir.c b/src/change_dir.c
index e16a11e..b40e3bf 100644
--- a/src/change_dir.c
+++ b/src/change_dir.c
@@ -29,6 +29,9 @@ change_dir(stralloc *sa, const char *opt, int flag_dot_as_home)
 	if (!flag_dot_as_home && -1==chdir(home)) 
 		xbailout(111,errno,"failed to chdir to ",home,0,0);
 
+	if (getuid() == 0 && !opt)
+		opt = "/var/lib/uschedule";
+
 	if (opt) {
 		if (opt[0]=='/') {
 			if (!stralloc_copys(&absprefix,opt)) oom();
diff --git a/src/uschedulecmd.c b/src/uschedulecmd.c
index 28048fc..b9fd8a8 100644
--- a/src/uschedulecmd.c
+++ b/src/uschedulecmd.c
@@ -85,7 +85,7 @@ create_job(int fd, char **args)
 	char ospace[512];
 
 	buffer_init(&o,(buffer_op) write,fd,ospace,sizeof(ospace)); 
-	if (-1==buffer_puts(&o,"#! /bin/sh\n")) die_write_temp();
+	if (-1==buffer_puts(&o,"#!/bin/sh\n")) die_write_temp();
 	if (o_env) {
 		static stralloc fn;
 		if (!stralloc_copys(&fn,o_id)) oom();
@@ -107,7 +107,7 @@ create_job(int fd, char **args)
 		if (fd==-1)
 			xbailout(111,errno,"failed to open_excl ",fn.s,0,0);
 		buffer_init(&o,(buffer_op) write,fd,ospace,sizeof(ospace)); 
-		if (-1==buffer_puts(&o,"#! /bin/sh\n")) die_write_temp();
+		if (-1==buffer_puts(&o,"#!/bin/sh\n")) die_write_temp();
 	} 
 
 	if (args) {
@@ -118,6 +118,7 @@ create_job(int fd, char **args)
 			if (-1==buffer_puts(&o,args[j])) die_write_temp();
 			spc=" ";
 		}
+		if (-1==buffer_puts(&o,"\n")) die_write_temp();
 	} else {
 		buffer_init(&i,(buffer_op) read,0,ispace,sizeof(ispace)); 
 		switch (buffer_copy(&o,&i)) {
@@ -127,7 +128,6 @@ create_job(int fd, char **args)
 		default: xbailout(100,errno,"unexpected errorcode from buffer_copy",0,0,0);
 		}
 	}
-	if (-1==buffer_puts(&o,"\n")) die_write_temp();
 	if (-1==buffer_flush(&o)) die_write_temp();
 	if (-1==fchmod(fd,0755)) die_fchmod();
 	if (-1==fsync(fd)) die_fsync();
